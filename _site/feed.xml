<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cocoafei</title>
    <description>欢迎来到我的Blog~</description>
    <link>https://cocoafei.top/</link>
    <atom:link href="https://cocoafei.top/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 01 Apr 2021 10:52:18 +0800</pubDate>
    <lastBuildDate>Thu, 01 Apr 2021 10:52:18 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>XCFramework 是用来干什么的</title>
        <description>&lt;p&gt;我们先看一个 Xcode 12 编译时的常见错误，GMObjC.framework 同时包含 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x86_64 arm64&lt;/code&gt; 架构，在 Xcode 12 之前的版本，编译时并不会报错，但现在却报错如下：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 当在真机运行时，编译报错
xx.xcodeproj Building for iOS, but the linked and embedded framework 'GMObjC.framework' was built for iOS + iOS Simulator.
# 当在模拟器运行时，编译报错
xx.xcodeproj Building for iOS Simulator, but the linked and embedded framework 'GMObjC.framework' was built for iOS + iOS Simulator.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;很明显，新版本 Xcode 在使用包含多架构的库时会报错。从 stackoverflow 很容易找到解决方案，在工程的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build Settings -&amp;gt; Excluded Architectures&lt;/code&gt; 依次添加编译对应架构时，需要排除的架构。&lt;/p&gt;

&lt;p&gt;以包含 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x86_64 arm64&lt;/code&gt; 架构的 GMObjC.framework 为例，在编译模拟器时，需要移除 arm64 架构；同理编译真机时，需要移除 x86_64 架构。选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Excluded Architectures&lt;/code&gt;，点击加号”➕“，依次添加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any iOS Simulator&lt;/code&gt; 值为 arm64，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Any iOS&lt;/code&gt; 值为 x86_64，再次编译即可通过。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/xcframework/xcframework1.png&quot; alt=&quot;Xcode 12 报错解决&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那 Xcode 为什么会编译报错呢，而之前不会。和 UIWebView、UIAlertView 类似，苹果在督促我们开发者放弃旧类型，使用新类型 XCFramework。&lt;/p&gt;

&lt;h2 id=&quot;xcframework-是什么&quot;&gt;XCFramework 是什么&lt;/h2&gt;

&lt;p&gt;首先回顾一下 iOS 开发中的静态库和动态库。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;静态库(.a/.framework)：链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝；&lt;/li&gt;
  &lt;li&gt;动态库(.dylib/.tbd/.framework)：程序运行时由系统动态加载到内存，系统动态库可被多个程序共享。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;XCFramework 是苹果新出的库类型，在 Xcode 11 及 cocoapods 1.9 以上版本被支持，与普通动态库/静态库最大的区别是将&lt;strong&gt;多个平台&lt;/strong&gt;的二进制库，捆绑到一个可分发的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.xcframework&lt;/code&gt;捆绑包中，支持所有的苹果平台和架构。&lt;/p&gt;

&lt;p&gt;这里的关键词是&lt;strong&gt;多个平台&lt;/strong&gt;（iOS, macOS, tvOS, watchOS, iPadOS, carPlayOS），我们使用的普通动态库/静态库属于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fat file&lt;/code&gt;，仅仅是包含多个架构，如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;armv7 armv7s arm64 arm64e x86_64&lt;/code&gt;等，而 XCFramework 可以包含 iOS 设备，iOS 模拟器和 Mac Catalyst 等多个平台的二进制库。&lt;/p&gt;

&lt;p&gt;苹果引入 XCFramework 支持所有苹果平台，以支持苹果想实现&lt;strong&gt;大一统&lt;/strong&gt;的规划，而且 XCFramework 编译的 Swift 库，使用者不再需要使用相同 Xcode 版本编译器（使用 Swift 库实现组件化的开发者应该深有感触），对比使用 .framework 格式，使用 .xcframework 格式 APP 包大小和启动速度都有提升。&lt;/p&gt;

&lt;h2 id=&quot;制作-xcframework&quot;&gt;制作 XCFramework&lt;/h2&gt;

&lt;p&gt;制作 XCFramework 很简单，通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcodebuild -create-xcframework&lt;/code&gt;命令即可完成，我通过合并 GMObjC 库的模拟器和真机版本来演示。&lt;/p&gt;

&lt;p&gt;当前文件夹下有编译好的 GMObjC.framework 分别是真机版本和模拟器版本。&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── Release-iphoneos
│   ├── 0CD1FB8D-9D63-3092-B68B-2E579A306D3F.bcsymbolmap
│   ├── GMObjC.framework
│   └── GMObjC.framework.dSYM
└── Release-iphonesimulator
    ├── GMObjC.framework
    └── GMObjC.framework.dSYM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcodebuild -create-xcframework&lt;/code&gt;命令来合并为 XCFramework。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 创建合并包 GMObjC.xcframework&lt;/span&gt;
xcodebuild &lt;span class=&quot;nt&quot;&gt;-create-xcframework&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; Release-iphoneos/GMObjC.framework &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; Release-iphonesimulator/GMObjC.framework &lt;span class=&quot;nt&quot;&gt;-output&lt;/span&gt; GMObjC.xcframework
&lt;span class=&quot;c&quot;&gt;# 或者换行展示更清晰&lt;/span&gt;
xcodebuild &lt;span class=&quot;nt&quot;&gt;-create-xcframework&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; Release-iphoneos/GMObjC.framework &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; Release-iphonesimulator/GMObjC.framework &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-output&lt;/span&gt; GMObjC.xcframework
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;合并后的 GMObjC.xcframework 目录结构如下，包含 arm64 和 x86_64 版本，这和 lipo 操作类似，合并其他平台时操作类似。&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GMObjC.xcframework
├── Info.plist
├── ios-arm64
│   └── GMObjC.framework
└── ios-x86_64-simulator
    └── GMObjC.framework
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是静态库 .a 文件，则需要用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-library&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-headers&lt;/code&gt;来指定静态库和头文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcodebuild &lt;span class=&quot;nt&quot;&gt;-create-xcframework&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-library&lt;/span&gt; Release-iphoneos/GMObjC.a &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-headers&lt;/span&gt; Release-iphoneos/include/GMObjC &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-library&lt;/span&gt; Release-iphonesimulator/GMObjC.a &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-headers&lt;/span&gt; Release-iphonesimulator/include/GMObjC &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;-output&lt;/span&gt; GMObjC.xcframework
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用-xcframework&quot;&gt;使用 XCFramework&lt;/h2&gt;

&lt;p&gt;如何使用 .xcframework 文件，选择当前工程 Target，选择 General 目录下的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Frameworks,Libraries,and Embedded Content&lt;/code&gt; 拖入 .xcframework 文件即可，和使用 .framework 文件几乎一样。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/xcframework/xcframework2.png&quot; alt=&quot;XCFramework 配置&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;一键编译-xcframework&quot;&gt;一键编译 XCFramework&lt;/h2&gt;

&lt;p&gt;编译 XCFramework 需要使用命令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcodebuild -create-xcframework&lt;/code&gt;，写成 shell 文件更方便，放在 .xcodeproj 文件同级目录下，填入 scheme 名称，拖入终端回车即可生成。&lt;/p&gt;

&lt;p&gt;脚本只写了 iPhone 真机和模拟器的合并，其他平台类似，自行添加修改即可，查看示例在 &lt;a href=&quot;https://github.com/muzipiao/GMObjC&quot;&gt;GMObjCFramework&lt;/a&gt; 文件夹中，下载后脚本拖入终端运行，可看到生成的 GMObjC.xcframework 在 build 目录下。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 放在与 .xcodeproj 文件同级目录下，生成结果在 build 目录下&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 需要编译的 scheme&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GMObjCFramework&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
     &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请填入 scheme 名称&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;scheme: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0

xcodebuild archive &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-scheme&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-sdk&lt;/span&gt; iphoneos &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-archivePath&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;archives/ios_devices.xcarchive&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;BUILD_LIBRARY_FOR_DISTRIBUTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YES &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;SKIP_INSTALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO

xcodebuild archive &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-scheme&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-sdk&lt;/span&gt; iphonesimulator &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-archivePath&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;archives/ios_simulators.xcarchive&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;BUILD_LIBRARY_FOR_DISTRIBUTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YES &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;SKIP_INSTALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO

&lt;span class=&quot;c&quot;&gt;# 优先从 archive 文件夹下读取&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;product_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;archives/ios_devices.xcarchive/Products/Library/Frameworks&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file_name &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$product_list&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;full_product_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;break
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 读取不到就从 showBuildSettings 读取&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$full_product_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$full_product_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;xcodebuild &lt;span class=&quot;nt&quot;&gt;-showBuildSettings&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;FULL_PRODUCT_NAME&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;full_product_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#*= &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;product_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;full_product_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

xcodebuild &lt;span class=&quot;nt&quot;&gt;-create-xcframework&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; archives/ios_devices.xcarchive/Products/Library/Frameworks/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$full_product_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; archives/ios_simulators.xcarchive/Products/Library/Frameworks/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$full_product_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-output&lt;/span&gt; build/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$product_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;.xcframework
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Jan 2021 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2021/01/XCFramework-%E6%98%AF%E7%94%A8%E6%9D%A5%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84/</link>
        <guid isPermaLink="true">https://cocoafei.top/2021/01/XCFramework-%E6%98%AF%E7%94%A8%E6%9D%A5%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>GitHub Actions 监测网站在线</title>
        <description>&lt;h2 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h2&gt;

&lt;p&gt;GitHub Actions 是 GitHub 的持续集成服务，如果接触过 Jenkins 或 Travis CI，那么对持续集成不会陌生。我们经常使用的功能，在 push 代码到仓库时，或定时抓取代码、自动打包、自动部署到服务器、自动化测试等，都属于持续集成类。GitHub Actions 功能更强大，不仅可以自己添加脚本，而且允许开发者分享自己的脚本到&lt;a href=&quot;https://github.com/marketplace?type=actions&quot;&gt;Actions 应用市场&lt;/a&gt;，其他人使用时直接引用即可。&lt;/p&gt;

&lt;p&gt;通过一个示例工作流程，对 GitHub Actions 先有一个简单印象。如下名称为 Notice 工作流程可实现 push 代码到仓库时，使用谷歌邮箱自动发送一封 Email 到指定邮箱。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Notice&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Send mail&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dawidd6/action-send-mail@v2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;server_address&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;smtp.gmail.com&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;server_port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;465&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{secrets.MAIL_USERNAME}}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{secrets.MAIL_PASSWORD}}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Github Actions job result&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file://README.md&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;obiwan@tatooine.com,yoda@dagobah.com&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Luke Skywalker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice 工作流程的实现，除了设置触发条件外，主要通过引用他人脚本&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dawidd6/action-send-mail@v2&lt;/code&gt; 实现发送邮件功能，邮件内容可以为字符串或文件，这里为 README.md 文本内容。&lt;/p&gt;

&lt;p&gt;工作流程中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${{secrets.MAIL_USERNAME}}&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${{secrets.MAIL_PASSWORD}}&lt;/code&gt; 分别为邮箱账号和授权码，注意&lt;strong&gt;不要在代码中直接使用密码&lt;/strong&gt;，密钥类要配置在当前仓库的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings/Secrets&lt;/code&gt;目录下，使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${{secrets.变量名称}}&lt;/code&gt;引用，具体配置方法，稍后具体说明。&lt;/p&gt;

&lt;h2 id=&quot;监测网站&quot;&gt;监测网站&lt;/h2&gt;

&lt;p&gt;自建的网站/博客经常会出现 HTTPS 证书过期，服务器宕机等各种情况，这时候需要另外一台服务器定时监测网站是否在线。GitHub Actions 完全可以满足这个需求，通过定时执行脚本，来检测网站是否在线，而且是稳定免费的。&lt;/p&gt;

&lt;p&gt;实现思路：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;添加一个工作流程 (workflow)，并设置定时触发（每隔 15 分钟）此工作流程；&lt;/li&gt;
  &lt;li&gt;在工作流程中使用 curl 命令检查 cocoafei.top 的 HTTP 请求状态码；&lt;/li&gt;
  &lt;li&gt;使用 python 脚本判断状态码，如果不是 200 或 301 就发送邮件通知，是的话忽略。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;流程图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/flow_chart.png&quot; alt=&quot;actions流程图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;curl-查询网站状态&quot;&gt;curl 查询网站状态&lt;/h2&gt;

&lt;p&gt;curl 功能很强大，我们判断网站是否在线，只需要使用 curl 查询请求网站，获取网站 HTTP 状态码，200/301 时表示网站正常。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-I 仅测试HTTP头&lt;/li&gt;
  &lt;li&gt;-m 15 表示最多查询15s&lt;/li&gt;
  &lt;li&gt;-o /dev/null 屏蔽原有输出信息&lt;/li&gt;
  &lt;li&gt;-s silent 模式，不输出任何东西&lt;/li&gt;
  &lt;li&gt;-w %{http_code} 控制额外输出&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 这里表示静默获取网站 cocoafei.top 的 HTTP 请求状态码，最多查询 15s&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 15 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%{http_code}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null  cocoafei.top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/curl_result.png&quot; alt=&quot;curl 查询结果&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;python-发送-email&quot;&gt;python 发送 Email&lt;/h2&gt;

&lt;p&gt;由于需要判断网站状态，网站不在线时再发送邮件，在线时忽略，市场上发送邮件的 Action 不符合需求，我们自己写一个 Python 脚本来实现。&lt;/p&gt;

&lt;p&gt;使用 Python 脚本实现判断状态码和发邮件功能，需要传入三个参数，分别是发送邮件的邮箱名称，邮箱授权码和 curl 网站获取的网络状态码。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;警告[FBI WARNING]&lt;/strong&gt;⚠️：不要把邮箱授权码写在代码里面，会造成邮箱被盗。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
# coding=UTF-8
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;smtplib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;email.mime.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
参数 1 SMTP 服务器的用户名，发送邮箱名称
参数 2 SMTP 服务器的密码，发送邮箱授权码（注意非邮箱原密码）
参数 3 curl 网站返回的状态码，如 200
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;参数个数错误&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# SMTP 服务器名称
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;smtp.qq.com&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# SMTP 服务器的用户名
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# SMTP 服务器的密码
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_pass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# curl 网站返回的状态码
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# cocoafei.top 使用重定向域名，因此会返回 301，表示网站正常，不用发送邮件
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;网站状态正常&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 发送邮箱，这里自己给自己发送一封邮件
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mail_user&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 接收邮箱，多个邮箱使用逗号隔开，eg. [1234@qq.com, 5678@126.com]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receivers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 邮件正文文字
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'curl cocoafei.top 状态码:'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'plain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 发件人名称，eg. 发件人：GithubActions &amp;lt;actions@github.com&amp;gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'From'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GithubActions &amp;lt;actions@github.com&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 收件人名称，eg. 收件人：lifei
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'To'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;lifei&amp;lt;cocoafei.top&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 邮件标题
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Subject'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cocoafei.top 网络故障'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;smtpObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smtplib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SMTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 链接 SMTP 服务器，QQ 发送邮件服务器：smtp.qq.com，使用SSL，端口号465或587
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;smtpObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;587&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 登录 SMTP 服务器
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;smtpObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 发送邮件
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;smtpObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receivers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;邮件发送成功，网站状态码：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smtplib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SMTPException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;无法发送邮件，失败原因：&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smtplib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;添加-actions&quot;&gt;添加 Actions&lt;/h2&gt;

&lt;p&gt;(1) 选择当前仓库，点击 Actions 标签：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/create_action1.png&quot; alt=&quot;选择 Actions 标签&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(2) 选择自定义工作流程：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/create_action2.png&quot; alt=&quot;自定义工作流程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(3) 重命名 yml 文件名称，名称无限制，yml 配置文件基本格式如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/create_action3.png&quot; alt=&quot;yml 文件&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;yml-文件格式&quot;&gt;yml 文件格式&lt;/h2&gt;

&lt;p&gt;GitHub 只要发现 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows&lt;/code&gt; 目录里面有.yml文件，就会自动运行该文件，主要格式：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;workflow（工作流程）：可简单理解为一个 yml 文件就是一个 workflow。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;job（任务）：一个 workflow 由一个或多个 jobs 构成，一次可以完成多个任务。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;step（步骤）：每个 job 由多个 step 构成，一步一步逐个完成。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;action（动作）：每个 step 可以依次执行一个或多个命令（action）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如本次定时检查网站是否在线的 yml 文件，不用监听 push/pull 请求触发，定时触发，每 15 分钟执行一次 curl 命令，并将返回的 HTTP 状态码存储在变量 status_code，将发送邮件的邮箱账号、密码和status_code 的值传入 python 脚本中，如果不是 200/301 就发送通知邮件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 获取 cocoafei.top 的 HTTP 状态码，并将返回的 HTTP 状态码存储在变量 status_code&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 15 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%{http_code}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null  cocoafei.top&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将发送邮件的邮箱账号、密码和status_code 传入 Python 脚本，判断是否需要发送邮件&lt;/span&gt;
python ./email_status.py &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{secrets.MAIL_USERNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{secrets.MAIL_PASSWORD&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$status_code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;监测网站的完整 yml 文件如下，可参考下方注释理解。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 工作流程 (workflow) 名称&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cocoafei.top&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 触发条件&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 每天每 15 分钟运行一次此工作流&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/15&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 任务，一个工作流程由一个或多个任务 (job) 构成&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# build 任务，这个工作流程包含一个名称为 &quot;build&quot; 的任务 (job)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 任务 (job) 运行的环境类型，运行在虚拟机环境 ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 步骤 (step) 表示将作为任务 (job) 一部分执行的一系列任务&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# 第一步是获取源码，引用现成的检出 action，将代码检出到虚拟机上&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;# 运行一组 shell 名称，获取 cocoafei.top 的网站状态，并判断是否需要发送邮件&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get cocoafei.top response status code.&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;export status_code=$(curl -I -m 15 -s -w &quot;%{http_code}\n&quot; -o /dev/null  cocoafei.top)&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;python ./email_status.py ${{secrets.MAIL_USERNAME}} ${{secrets.MAIL_PASSWORD}} $status_code&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;on-触发条件&quot;&gt;on 触发条件&lt;/h2&gt;

&lt;p&gt;可以通过 push 或 pull 请求事件触发工作流，或定时触发工作流，并可指定分支。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cocoafei.top&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 此工作流程的触发条件&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# push 或 pull 请求事件触发工作流，且仅针对 master 分支&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 每天每 15 分钟运行一次此工作流&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/15&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;schedule 计划任务语法有五个字段，中间用空格分隔，每个字段代表一个时间单位。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 计划任务语法有五个字段，中间用空格分隔，每个字段代表一个时间单位。&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每 15 分钟运行一次此工作流&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/15&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每 5 分支运行一次此工作流&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/15&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每天在国际标准时间 20 点（北京时间早上 4 点）运行一次此工作流&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每周一在国际时间下午 1 点（北京时间下午 9 点）运行一次此工作流&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每天国际时间 0 点（北京时间上午 8 点）运行一次此工作流&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
    
&lt;span class=&quot;s&quot;&gt;┌───────────── minute (0 - 59)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ ┌───────────── hour (0 - 23)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ │ ┌───────────── day of the month (1 - 31)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ │ │ ┌───────────── month (1 - 12 or JAN-DEC)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ │ │ │ │&lt;/span&gt;                                   
&lt;span class=&quot;s&quot;&gt;│ │ │ │ │&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;│ │ │ │ │&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;您可在这五个字段中使用以下运算符：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;运算符&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;示例&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt;任意值&lt;/td&gt;
      &lt;td&gt;* * * * * 在每天的每分钟运行。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;,&lt;/td&gt;
      &lt;td&gt;值列表分隔符&lt;/td&gt;
      &lt;td&gt;2,10 4,5 * * * 在每天第 4 和第 5 小时的第 2 和第 10 分钟运行。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;值的范围&lt;/td&gt;
      &lt;td&gt;0 4-6 * * * 在第 4、5、6 小时的第 0 分钟运行。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;步骤值&lt;/td&gt;
      &lt;td&gt;20/15 * * * * 从第 20 分钟到第 59 分钟每隔 15 分钟运行（第 20、35 和 50 分钟）。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;配置-secrets-变量&quot;&gt;配置 Secrets 变量&lt;/h2&gt;

&lt;p&gt;由于 Python 脚本使用 QQ 邮箱发送 Email，QQ 邮箱不允许直接使用密码，需要提前获取 QQ 邮箱授权码，具体获取方法，先登录 QQ 邮箱，在路径&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置-账户-POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务&lt;/code&gt;，根据提示，查看说明开启获取授权码即可，其他邮箱操作类似。&lt;/p&gt;

&lt;p&gt;(1) 选择当前仓库的 Setting 目录，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings/Secrets&lt;/code&gt;，可看到如下界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/add_secrets1.png&quot; alt=&quot;选择 Secrets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(2) 选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New repository secret&lt;/code&gt; 按钮，看到如下画面，填入变量名称（如 MAIL_PASSWORD）和变量值（如获取的邮箱授权码），点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add secret&lt;/code&gt; 保存。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/add_secrets2.png&quot; alt=&quot;添加 Secret&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(3) 通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${{secrets.变量名称}}&lt;/code&gt; 使用变量值（例如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${{secrets.MAIL_PASSWORD}}&lt;/code&gt;）。&lt;/p&gt;

&lt;h2 id=&quot;自动执行效果&quot;&gt;自动执行效果&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/run_result1.png&quot; alt=&quot;执行效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/run_result2.png&quot; alt=&quot;执行效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/run_result3.png&quot; alt=&quot;执行效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github_actions/run_result4.png&quot; alt=&quot;执行效果&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.github.com/cn/free-pro-team@latest/actions/reference/events-that-trigger-workflows&quot;&gt;官方文档-触发工作流程的事件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2019/12/github_actions.html&quot;&gt;示例-定时发送天气&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html&quot;&gt;示例-GitHub Actions&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Dec 2020 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2020/12/GitHub-Actions-%E7%9B%91%E6%B5%8B%E7%BD%91%E7%AB%99%E5%9C%A8%E7%BA%BF/</link>
        <guid isPermaLink="true">https://cocoafei.top/2020/12/GitHub-Actions-%E7%9B%91%E6%B5%8B%E7%BD%91%E7%AB%99%E5%9C%A8%E7%BA%BF/</guid>
        
        <category>GitHub</category>
        
        
      </item>
    
      <item>
        <title>iOS 手机号一键登录</title>
        <description>&lt;h2 id=&quot;什么是一键登录&quot;&gt;什么是一键登录&lt;/h2&gt;

&lt;p&gt;iOS 无法直接获取当前设备手机号码（不包含使用私有 API），但电信服务运营商（移动/联通/电信等）是知道流量哪张手机卡消耗的，结合运营商的网关认证能力，就可以识别出当前使用的手机卡号码。通常说的场景是指&lt;strong&gt;一键登录&lt;/strong&gt;和&lt;strong&gt;本机号码认证&lt;/strong&gt;两个不同的功能，使用场景不一样，无需一起使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一键登录使用场景&lt;/strong&gt;：用户无需输入手机号码，SDK 会拉起授权页，用户确认授权后，SDK 会获取 token，服务端携带 token 到运营商网关获取用户当前上网使用的号码（eg. 服务端调用 GetMobile 接口），并返回给 App 服务端，服务端可将当前用户置为登录状态，并把手机号返回客户端。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本机号码认证使用场景&lt;/strong&gt;：用户输入手机号码，通过 SDK 获取 token，服务端携带输入的手机号码和 token 去运营商网关进行校验（eg. 服务端调用 VerifyMobile 接口），返回的结果是用户当前上网使用的号码与输入的号码是否一致。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;token 由集成的 SDK 生成，例如集成的是移动认证 SDK，则调用对应 API 返回 token；&lt;/li&gt;
  &lt;li&gt;用户必须开启 4G 流量，如果是多卡手机，则只能认证当前使用的流量的手机卡，2G/3G 影响识别效果；&lt;/li&gt;
  &lt;li&gt;手机号一键登录功能不支持任意应用，待使用的 APP 必须在管理平台配置对应的 APP 包名和唯一标识（Android为签名，iOS 为 Bundle ID）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;运营商&quot;&gt;运营商&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;电信运营商都公布自己的开放平台和 SDK：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;移动 - 互联网能力开放平台（http://dev.10086.cn/numIdentific?from=index）&lt;/li&gt;
  &lt;li&gt;电信 - 天翼账号开放平台（http://id.189.cn/banner/unPassword）&lt;/li&gt;
  &lt;li&gt;联通 - WO+ 开放平台（http://www.open.wo.com.cn/aep/index.html）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;三方运营商：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;三方运营商一般会整合了三大运营商的网关认证能力，其实就是在三大运营商 SDK 基础上进行了封装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;极光认证（https://www.jiguang.cn/identify）&lt;/li&gt;
  &lt;li&gt;友盟认证（https://market.aliyun.com/products/57124001/cmapi00036707.html）&lt;/li&gt;
  &lt;li&gt;网易认证（https://dun.163.com/product/phone-verification）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;集成测试对比，移动、极光和友盟，文档较齐全，移动 SDK 与项目冲突概率较小，极光和友盟可能需要项目已集成的对应 SDK 基础库版本，友盟还可能会与其他阿里组件冲突。&lt;/p&gt;

&lt;h2 id=&quot;一键登录流程&quot;&gt;一键登录流程&lt;/h2&gt;

&lt;p&gt;一键登录与本机号码认证流程很类似，用户使用体验的区别，可简单归纳为是否输入手机号码。一键登录流程如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SDK 初始化：调用 SDK 的初始化方法，传入项目在平台上的 AppKey 和 AppSecret；&lt;/li&gt;
  &lt;li&gt;唤起授权页：调用 SDK 唤起授权接口。SDK 会先向运营商发起获取手机号掩码的请求，请求成功后跳转到授权页。授权页会显示手机号掩码以及运营商协议给用户确认；&lt;/li&gt;
  &lt;li&gt;同意授权并登录：用户同意相关协议，点击授权页面的登录按钮，SDK 会请求本次取号的 token，请求成功后将 token 返回给客户端；&lt;/li&gt;
  &lt;li&gt;取号：将获取到的 token 发送到我们自己的服务器，由服务器携带 token 调用运营商一键登录的接口，调用成功就返回手机号码了。服务器用手机号进行登录或注册操作，返回操作结果给客户端，完成一键登录。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;流程图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/phone_oauth/phone_oauth0.png&quot; alt=&quot;一键登录流程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一键登录授权页面大致如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/phone_oauth/phone_oauth1.png&quot; alt=&quot;一键登录授权&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Oct 2020 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2020/10/iOS-%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/</link>
        <guid isPermaLink="true">https://cocoafei.top/2020/10/iOS-%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>开发者快速配置环境指南</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;开发配置环境或更新时，经常被网络搞得精疲力竭，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;403 Forbidden&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;443 Timeout&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSL_ERROR_SYSCALL&lt;/code&gt;等各种错误，不经历如小媳妇盼夫归般的等待进度条&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;########    9.1%&lt;/code&gt;慢慢爬行，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clone&lt;/code&gt;至 99% 时突然&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt;的绝望心情，是不会理解这种心情的 😤 。&lt;/p&gt;

&lt;p&gt;究其原因，是国外网络被屏蔽、速度慢，掉线等各种因素造成的；想学习时，可能花了一天配置环境，环境配置好早已没了心情。幸运的是国内高校和大公司都提供了镜像源，速度和稳定性都大幅度提升，国内直连，比付费 VPN 速度更快，稳定性更高。&lt;/p&gt;

&lt;p&gt;镜像源可简单理解为“复制的下载源”，例如下载一部电影，原始链接&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://movie.***.com&lt;/code&gt;是国外服务器的下载链接，国内直接下载可能速度只有 20KB；这时如果国内有人花费一整天把电影下载后，把这部电影放到国内服务器上，并向外开放下载地址&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://movie.***.cn&lt;/code&gt;，这时国内有人想下载这部电影，使用后面分享的这个链接，下载速度可能就达到 2MB 了；这里的比喻可能不太恰当，仅用于理解镜像源。&lt;/p&gt;

&lt;p&gt;本文提供 brew、pypi、docker，github 等部分解决方案，详细说明可查看镜像源的帮助文档。&lt;/p&gt;

&lt;h2 id=&quot;镜像源&quot;&gt;镜像源&lt;/h2&gt;

&lt;p&gt;国内镜像源做的比较好的是&lt;strong&gt;中科大&lt;/strong&gt;和清华，其他大公司也提供了镜像源，例如阿里、腾讯，网易等，一般情况下中科大和清华镜像源完全能满足开发需求，以&lt;strong&gt;中科大&lt;/strong&gt;镜像源举例。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mirrors.ustc.edu.cn/&quot;&gt;中科大镜像源地址&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://mirrors.ustc.edu.cn/&lt;/code&gt;，这是自动解析线路，还可以根据自己的网络选择如下速度快的线路：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mirrors.ustc.edu.cn/&quot;&gt;自动解析 https://mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipv4.mirrors.ustc.edu.cn/&quot;&gt;IPv4 线路 https://ipv4.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipv6.mirrors.ustc.edu.cn/&quot;&gt;IPv6 线路 https://ipv6.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cernet.mirrors.ustc.edu.cn/&quot;&gt;教育网线路 https://cernet.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://chinanet.mirrors.ustc.edu.cn/&quot;&gt;电信线路 https://chinanet.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unicom.mirrors.ustc.edu.cn/&quot;&gt;联通线路 https://unicom.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cmcc.mirrors.ustc.edu.cn/&quot;&gt;移动线路 https://cmcc.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rsync.mirrors.ustc.edu.cn/&quot;&gt;Rsync 线路 https://rsync.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;如何设置镜像源&lt;/strong&gt;，可查看&lt;a href=&quot;https://mirrors.ustc.edu.cn/help/&quot;&gt;帮助文档&lt;/a&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://mirrors.ustc.edu.cn/help/&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;其他镜像源&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/&quot;&gt;清华镜像源 https://mirrors.tuna.tsinghua.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.aliyun.com/mirror&quot;&gt;阿里云镜像源 https://developer.aliyun.com/mirror&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mirrors.cloud.tencent.com/&quot;&gt;腾讯镜像源 https://ipv6.mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mirrors.163.com/&quot;&gt;网易镜像源 http://mirrors.163.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;brew&quot;&gt;brew&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;替换 brew 源&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 替换 brew.git:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
git remote set-url origin https://mirrors.ustc.edu.cn/brew.git

&lt;span class=&quot;c&quot;&gt;# 替换 homebrew-core.git:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Library/Taps/homebrew/homebrew-core&quot;&lt;/span&gt;
git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git

&lt;span class=&quot;c&quot;&gt;# 替换 Homebrew Cask&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/Library/Taps/homebrew/homebrew-cask
git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git

&lt;span class=&quot;c&quot;&gt;# 对于 bash 用户，替换 Homebrew-bottles&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bash_profile
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile

&lt;span class=&quot;c&quot;&gt;# 对于 zsh 用户，替换 Homebrew-bottles&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;还原 brew 为官方地址&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew-bottles&lt;/code&gt;还原，打开&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt;或&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;文件，删除上面添加的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BOTTLE_DOMAIN&lt;/code&gt;行即可。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 重置 brew.git 为官方地址&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
git remote set-url origin https://github.com/Homebrew/brew.git

&lt;span class=&quot;c&quot;&gt;# 重置 homebrew-core.git 为官方地址&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Library/Taps/homebrew/homebrew-core&quot;&lt;/span&gt;
git remote set-url origin https://github.com/Homebrew/homebrew-core.git

&lt;span class=&quot;c&quot;&gt;# 重置 homebrew-cask 为官方地址&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/Library/Taps/homebrew/homebrew-cask
git remote set-url origin https://github.com/Homebrew/homebrew-cask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pypipip&quot;&gt;pypi(pip)&lt;/h2&gt;

&lt;p&gt;pip 是 Python 包管理工具，pip 命令默认使用的是国外的 pypi 镜像（pypi.python.org），速度慢易掉线，切换为国内镜像源。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;方法 1：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 临时使用&lt;/span&gt;
pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; https://mirrors.ustc.edu.cn/pypi/web/simple package
&lt;span class=&quot;c&quot;&gt;# 设为默认，升级 pip 到最新的版本 (&amp;gt;=10.0.0) 后进行配置&lt;/span&gt;
pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; https://mirrors.ustc.edu.cn/pypi/web/simple pip &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt;
pip config &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;global.index-url https://mirrors.ustc.edu.cn/pypi/web/simple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;方法 2：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当方法 1 不起作用时，可尝试此方法，在当前用户根目录下&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.pip/pip.conf&lt;/code&gt;，写入如下配置，没有文件夹和文件创建即可。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;tool.poetry.source]]
name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tsinghua&quot;&lt;/span&gt;
url &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;&lt;/span&gt;
default &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;

&lt;p&gt;安装完 Docker CE 之后，替换掉官方的 Docker Registry 服务，可加快拉取 Docker 镜像的速度，不同系统的更换方法不一致，参考镜像源帮助文档即可。&lt;/p&gt;

&lt;p&gt;以 macOS Catalina 的 Docker 为例，在 Preferences -&amp;gt; Docker Engine 中添加以下配置，重启 Docker：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;registry-mirrors&quot;&lt;/span&gt; : &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;http://docker.mirrors.ustc.edu.cn&quot;&lt;/span&gt;,
   &lt;span class=&quot;s2&quot;&gt;&quot;http://hub-mirror.c.163.com&quot;&lt;/span&gt;,
   &lt;span class=&quot;s2&quot;&gt;&quot;https://mirror.ccs.tencentyun.com&quot;&lt;/span&gt;,
   &lt;span class=&quot;s2&quot;&gt;&quot;http://registry.docker-cn.com&quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
 &lt;span class=&quot;s2&quot;&gt;&quot;insecure-registries&quot;&lt;/span&gt; : &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;registry.docker-cn.com&quot;&lt;/span&gt;,
   &lt;span class=&quot;s2&quot;&gt;&quot;docker.mirrors.ustc.edu.cn&quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cocoapods&quot;&gt;CocoaPods&lt;/h2&gt;

&lt;p&gt;CocoaPods 的 trunk 仓库大部分时候尚可，当速度慢或者失败时，可尝试如下配置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对于旧版的 CocoaPods 可以使用如下方法使用 tuna 的镜像：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod repo remove master
pod repo add master https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git
pod repo update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;新版的 CocoaPods 不允许用pod repo add直接添加master库了，但是依然可以：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.cocoapods/repos 
pod repo remove master
git clone https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;最后进入自己的工程，在自己工程的podFile第一行加上：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;github&quot;&gt;github&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;github 域名污染&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;部分网络可能由于域名污染，github 出现访问失败、图片加载不出来的情况，这时候可以参考修改 hosts 文件，添加 IP与域名映射，通过直接访问 IP 地址的方式来访问，结合&lt;a href=&quot;https://github.com/oldj/SwitchHosts&quot;&gt;switchhosts&lt;/a&gt;，可以实现自动修改更新 hosts 文件。&lt;/p&gt;

&lt;p&gt;github 的 IP 自动指向可参考&lt;a href=&quot;https://github.com/521xueweihan/GitHub520&quot;&gt;GitHub520&lt;/a&gt;，此方法有效但作用有限，github 经常访问失败的同学可尝试一下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;github 下载速度慢&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt;较大项目时，速度慢、总是失败的情况，可使用 VPN 加速，效果明显，此方法只适合有 VPN 或其他工具的用户。&lt;/p&gt;

&lt;p&gt;例如 VPN 的 socks5 端口是 49526，参考下方&lt;strong&gt;socks5协议&lt;/strong&gt;配置：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# socks5协议，49526 端口修改成自己的本地代理端口&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; http.https://github.com.proxy socks5://127.0.0.1:49526
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; https.https://github.com.proxy socks5://127.0.0.1:49526

&lt;span class=&quot;c&quot;&gt;# http协议，49527 端口修改成自己的本地代理端口127.0.0.1:49527&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; http.proxy http://127.0.0.1:49527
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; https.proxy https://127.0.0.1:49527

&lt;span class=&quot;c&quot;&gt;# http协议，49527 端口修改成自己的本地代理端口&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; http.https://github.com.proxy https://127.0.0.1:49527
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; https.https://github.com.proxy https://127.0.0.1:49527

&lt;span class=&quot;c&quot;&gt;# reset 代理设置&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unset&lt;/span&gt; http.https://github.com.proxy
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unset&lt;/span&gt; https.https://github.com.proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 08 Aug 2020 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2020/08/%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E6%8C%87%E5%8D%97/</link>
        <guid isPermaLink="true">https://cocoafei.top/2020/08/%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E6%8C%87%E5%8D%97/</guid>
        
        <category>镜像源</category>
        
        
      </item>
    
      <item>
        <title>SonarQube 自动化扫描 iOS 项目</title>
        <description>&lt;h2 id=&quot;自动扫描概述&quot;&gt;自动扫描概述&lt;/h2&gt;

&lt;p&gt;SonarQube 是一款用于代码质量管理的开源工具，它主要用于管理源代码的质量。SonarQube 全自动化扫描，主要利用 Jenkins 检测 Git 代码更新，定时拉取代码，然后配合 oclint 及 SonarQube 实现自动化扫描展示。oclint 负责扫描项目，SonarQube 负责将扫描结果存储到数据库，并提供数据可视化。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/sonar/sonar_swift.png&quot; alt=&quot;SonarQube&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;主要步骤&quot;&gt;主要步骤&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Jenkins 定时检测 Git 分支更新，并执行脚本（只有此操作使用 Jenkins，以下步骤使用脚本）；&lt;/li&gt;
  &lt;li&gt;脚本检测本地是否已存在项目，不存在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt;拉取代码，存在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt;拉取更新到本地；&lt;/li&gt;
  &lt;li&gt;查找定位后缀为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.xcodeproj&lt;/code&gt;的工程文件，使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcodebuild -list&lt;/code&gt;获取 Schemes 列表；&lt;/li&gt;
  &lt;li&gt;使用 xcodebuild 清理工程缓存，并生成新的编译数据，使用 xcpretty 转成 json 格式；&lt;/li&gt;
  &lt;li&gt;使用 oclint 设置相关忽略项，并导出 oclint.xml 格式分析报告；&lt;/li&gt;
  &lt;li&gt;脚本动态生成 sonar-project.properties 文件，并调用 sonar-scanner 储存到数据库；&lt;/li&gt;
  &lt;li&gt;导出 ~/.jenkins/jobs/ 目录下的 config.xml 模板文件，脚本批量创建添加任务；&lt;/li&gt;
  &lt;li&gt;手动或 Jenkins 自动触发扫描，本机访问 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:9000&lt;/code&gt; 查看结果。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;安装流程&quot;&gt;安装流程&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;官网下载 dmg 安装 Java 8，Jenkins 依赖 Java 8，多版本可共存。&lt;/li&gt;
  &lt;li&gt;安装 Jenkins 和相关 Git 组件，brew 安装失败可迅雷下载替换，插件安装失败可换源换网。&lt;/li&gt;
  &lt;li&gt;brew 安装 postgresql，并创建数据库名、表名、用户名和密码为 sonar 的数据库。&lt;/li&gt;
  &lt;li&gt;下载 sonarqube 实现可视化，放在 /opt 或其他目录下，配置 sonar.properties 文件。&lt;/li&gt;
  &lt;li&gt;下载 sonar-swift 三方插件，将插件放在 sonarqube 的 plugins 目录下。&lt;/li&gt;
  &lt;li&gt;安装 sonar-scanner 并配置 sonar-scanner.properties 文件的 URL 和编码。&lt;/li&gt;
  &lt;li&gt;配置 Jenkins 的 jobs 任务和 shell 运行。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;java-安装&quot;&gt;Java 安装&lt;/h2&gt;

&lt;p&gt;访问 &lt;a href=&quot;https://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;Java官网&lt;/a&gt;，并下载 Java 8 版本的 dmg 安装包，双击安装即可。注意，不要仅安装最新版本 JDK，Jenkins 要求 Java 8，如果需要可以同时安装多版本 Java。&lt;/p&gt;

&lt;p&gt;若需要完全删除旧的 Java 版本，可执行下面的命令和操作。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-fr&lt;/span&gt; /Library/Internet&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Plug-Ins/JavaAppletPlugin.plugin
&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-fr&lt;/span&gt; /Library/PreferencePanes/JavaControlPanel.prefPane
&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-fr&lt;/span&gt; ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Oracle/Java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;并在 /Library/Java/JavaVirtualMachines/ 目录下删除对应 Java 版本缓存。&lt;/p&gt;

&lt;h2 id=&quot;jenkins-安装&quot;&gt;Jenkins 安装&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;网络上安装教程很多，不再详细赘述，仅说明简要步骤。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;使用 brew 安装简单，执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install jenkins&lt;/code&gt;安装，终端执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jenkins&lt;/code&gt; 启动；&lt;/li&gt;
  &lt;li&gt;启动完成，浏览器输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:8080&lt;/code&gt;浏览，进入 Jenkins 管理网页；&lt;/li&gt;
  &lt;li&gt;首次会提示输入初始密码，若无提示可在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.jenkins/secrets/initialAdminPassword&lt;/code&gt;路径找到；&lt;/li&gt;
  &lt;li&gt;根据提示输入初始密码，并创建用户名和密码，例如选择账户名和密码都是 sonar；&lt;/li&gt;
  &lt;li&gt;在 Jenkins 系统设置-插件管理中，选择 Git 和 Xcode 等相关插件；&lt;/li&gt;
  &lt;li&gt;选择 新建-自由风格项目，按照提示配置 Git 和 Shell 脚本即可。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;使用 brew 安装 Jenkins 失败，可手动安装，迅雷下载，手动复制到指定目录下。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;brew install xxxx 失败时返回对应 xxxx.tar.gz 的链接，迅雷下载；&lt;/li&gt;
  &lt;li&gt;brew –cache 查看缓存(/Users/lif/Library/Caches/Homebrew);&lt;/li&gt;
  &lt;li&gt;点击任意链接，显示原身找到下载目录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Library/Caches/Homebrew/downloads/&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;将下载的 xxxx.tar.gz 拷贝到下载目录，名称命名为和 .tar.gz.incomplete 同样名称，去掉 .incomplete;&lt;/li&gt;
  &lt;li&gt;再次安装 brew install xxxx。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Jenkins 如果安装插件失败，可以更换安装源、手动上传、科学访问外网，更换网络。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;更换安装源路径在 Jenkins 的管理网页中，系统设置-插件管理-高级-修改升级站点。
eg.安装源：http://mirror.esuni.jp/jenkins/updates/update-center.json&lt;/li&gt;
  &lt;li&gt;官网下载后缀 .hpi 插件文件，在系统设置-插件管理-高级-上传插件，选择下载的插件上传。
eg.Jenkins 插件官网：https://plugins.jenkins.io/&lt;/li&gt;
  &lt;li&gt;科学访问外网，可以选择科学访问外网下载。&lt;/li&gt;
  &lt;li&gt;下载失败也可能是连接网络的问题，我使用公司网络无论如何都是失败，使用手机分享 WiFi 下载成功。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Jenkins 启动停止&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 启动 jenkins，Ctrl + C 强制终止&lt;/span&gt;
jenkins
&lt;span class=&quot;c&quot;&gt;# brew 启动 jenkins 服务的方式（注意此操作可能会导致执行 Shell 存在用户权限问题）&lt;/span&gt;
brew services restart jenkins
&lt;span class=&quot;c&quot;&gt;# brew 停止 jenkins 服务的方式&lt;/span&gt;
brew services stop jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;注意：使用此方式启动可能导致执行 Shell 脚本失败，若失败可以在终端使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jenkins&lt;/code&gt;命令启动。&lt;/p&gt;

&lt;p&gt;网页启动/停止/重启服务：&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;停止服务&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;重启服务&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reload&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;重新载入服务&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;postgresql&quot;&gt;postgresql&lt;/h2&gt;

&lt;p&gt;sonarqube 默认数据库为 h2，用于测试，我们可以在 sonarqube 的安装目录 conf/sonar.properties 文件中找到支持的数据库的说明，postgresql 就是支持的一种。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The embedded H2 database is used by default. It is recommended for tests but not for production use. Supported databases are Oracle, PostgreSQL and Microsoft SQLServer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 安装&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;postgresql
&lt;span class=&quot;c&quot;&gt;# 初始化，可省略&lt;/span&gt;
initdb /usr/local/var/postgres
&lt;span class=&quot;c&quot;&gt;# 启动服务&lt;/span&gt;
pg_ctl &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; /usr/local/var/postgres &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /usr/local/var/postgres/server.log start
&lt;span class=&quot;c&quot;&gt;# 设置开机启动（此操作也可能会导致用户权限问题，导致 sonarqube 启动失败）&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sfv&lt;/span&gt; /usr/local/opt/postgresql/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.plist ~/Library/LaunchAgents
launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;span class=&quot;c&quot;&gt;# 给当前用户创建数据库，postgres 不会自动创建数据库，需手动创建&lt;/span&gt;
createdb
&lt;span class=&quot;c&quot;&gt;# 创建用户&lt;/span&gt;
CREATE USER sonar WITH PASSWORD &lt;span class=&quot;s1&quot;&gt;'sonar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 创建数据库&lt;/span&gt;
CREATE DATABASE sonar WITH OWNER sonar ENCODING &lt;span class=&quot;s1&quot;&gt;'UTF8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 给 sonar 用户添加创建数据库的属性&lt;/span&gt;
ALTER ROLE sonar CREATEDB&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 测试当前用户&lt;/span&gt;
psql &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; sonar &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 登录控制台&lt;/span&gt;
psql
&lt;span class=&quot;c&quot;&gt;# 删除数据库（备用）&lt;/span&gt;
DROP DATABASE sonar&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 所有权及所有权转换（备用）&lt;/span&gt;
CREATE DATABASE sonar OWNER sonar&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
GRANT ALL PRIVILEGES ON DATABASE sonar to sonar&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sonarqube&quot;&gt;sonarqube&lt;/h2&gt;

&lt;p&gt;下载 &lt;a href=&quot;https://www.sonarqube.org/downloads/&quot;&gt;sonarqube&lt;/a&gt; 源码到指定目录，例如可放在 /opt 或其他目录下，初始账号密码 admin。配置 conf/sonar.properties 文件中的数据库账号、密码和 URL。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:postgresql:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;启动方式为执行安装目录下对应系统的 shell 文件，例如我的电脑为 Mac，sonarqube 放在 /opt 目录下，可以执行 bin 目录下的 macosx-universal-64/sonar.sh 脚本启动。注意 /opt 为 Mac 系统隐藏根目录，同时按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command shift = .&lt;/code&gt; 四个按键可以显示系统隐藏文件，再按一次隐藏系统隐藏文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 启动 sonarqube&lt;/span&gt;
sh /opt/sonarqube/bin/macosx-universal-64/sonar.sh start
&lt;span class=&quot;c&quot;&gt;# 如果执行 shell 存在权限问题，可使用 chmod 777 获取对应文件或目录系统权限&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;777 /opt/sonarqube/bin/macosx-universal-64/sonar.sh
&lt;span class=&quot;c&quot;&gt;# 获取目录 /opt 系统权限&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 /opt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-sonar-swift-插件&quot;&gt;安装 sonar-swift 插件&lt;/h2&gt;

&lt;p&gt;由于 sonarqube 的 ObjectiveC 插件收费，使用三方插件&lt;a href=&quot;https://github.com/Backelite/sonar-swift&quot;&gt;sonar-swift&lt;/a&gt;，并按照官方文档安装相关插件，将下载的 .jar 包放在 sonarqube的 extensions/plugins 目录下。旧版插件 sonar-objective-c 已不支持最新版 sonarqube，而 sonar-swift 同时支持 swift 和 objective-c。&lt;/p&gt;

&lt;p&gt;sonar-swift 要求安装的插件较多，可以选择安装 sonar-scanner，oclint 和 xcpretty。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swiftlint&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tailor&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sonar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 安装 oclint&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oclint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formulae&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oclint&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 更新 oclint&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upgrade&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oclint&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xcpretty&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slather&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lizard&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sonar-scanner 安装完成后需要配置一下，终端输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;where sonar-scanner&lt;/code&gt;，找到安装路径（/usr/local/Cellar/sonar-scanner/），在目录下找到配置文件 sonar-scanner.properties，配置扫描结果上传地址和编码。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# sonar-scanner 扫描结果上传地址（sonarqube 地址为 http://localhost:9000）&lt;/span&gt;
sonar.host.url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:9000
&lt;span class=&quot;c&quot;&gt;# 编码格式&lt;/span&gt;
sonar.sourceEncoding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;启动扫描&quot;&gt;启动扫描&lt;/h2&gt;

&lt;p&gt;所有插件已安装完毕，可以执行 sonar-scan 进行&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 启动postgres服务&lt;/span&gt;
pg_ctl &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; /usr/local/var/postgres &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /usr/local/var/postgres/server.log start
&lt;span class=&quot;c&quot;&gt;# 启动 Jenkins&lt;/span&gt;
brew services start jenkins
&lt;span class=&quot;c&quot;&gt;# 启动 sonar&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;777 /opt/sonarqube/bin/macosx-universal-64/sonar.sh
sh /opt/sonarqube/bin/macosx-universal-64/sonar.sh start
&lt;span class=&quot;c&quot;&gt;# Jenkins 执行的脚本，自动拉取分支代码，分析，上传 sonar，传入本地仓库地址和 Git 地址即可&lt;/span&gt;
/usr/bin/python /Users/lf/Documents/auto-scanner/auto-sonar.py publicplugingoup/gbcheckup.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;原理很简单，创建一个 jenkins 任务，定时检查更新，如果有更新，就执行脚本去拉取代码，并扫描上传结果。
例如需要将所有分支保存到当前用户桌面的 Git 文件夹下，那仓库路径就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Desktop/Git&lt;/code&gt;，分支的 Git 地址为 http://192.168.1.88/app/mybranch.git，可手动执行脚本下载扫描。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/bin/python /Users/lf/Documents/auto-scanner/auto-sonar.py publicplugingoup/gbcheckup.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;自动化扫描&quot;&gt;自动化扫描&lt;/h4&gt;

&lt;p&gt;完成上面我们可以手动执行为每个仓库进行扫描，那如何做到如下自动化要求：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;批量为每个组件创建 Jenkins 任务，并定时检测 Git 更新，若更新则自动扫描；&lt;/li&gt;
  &lt;li&gt;使用脚本自动从 Git 拉取组件源码，若已拉取则检查更新组件代码；&lt;/li&gt;
  &lt;li&gt;自动查找定位项目 project 文件及项目 scheme，自动进行逐个扫描；&lt;/li&gt;
  &lt;li&gt;自动创建 Sonar 配置文件，扫描结果自动储存到数据库，通过网页查看结果。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;批量创建 Jenkins 任务，我们通过脚本一次性批量创建即可；检测更新我们可以通过 Jenkins 定时任务去执行；自动拉取最新代码和查找 scheme 进行扫描，我们在定时任务的脚本中执行即可。&lt;/p&gt;

&lt;h2 id=&quot;jenkins-批量创建任务&quot;&gt;Jenkins 批量创建任务&lt;/h2&gt;

&lt;p&gt;若组件很多，逐个手动创建 Jenkins 任务，显然不符合程序员的风格，我们需要批量自动创建。假设我们的组件 Git 地址都是这样的&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://192.168.1.44/publicrepos/demo1.git
http://192.168.1.44/publicrepos/demo2.git
http://192.168.1.44/publicrepos/demo3.git
http://192.168.1.44/publicrepos/demo3.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们为分支 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://192.168.1.44/publicrepos/demo1.git&lt;/code&gt; 创建一个 Jenkins 的任务，这时我们会发现 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.jenkins/jobs/&lt;/code&gt; 目录下多了 demo1 文件夹，里面 config.xml 文件，这就是 Jenkins 任务的配置。&lt;/p&gt;

&lt;p&gt;通过对比我们发现，只要修改一下 Git 地址和传入脚本的分支名称就可以了。我们可以为每一个组件复制一份 xml 文档，并修改 Git 地址和传入脚本的参数，复制到 Mac 端 Jenkins 的任务 jobs 路径 ~/.jenkins/jobs/ 下既可。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version='1.1' encoding='UTF-8'?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ......... 省略部分 ........ --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;scm&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hudson.plugins.git.GitSCM&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;plugin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;git@4.0.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configVersion&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configVersion&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;userRemoteConfigs&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;hudson.plugins.git.UserRemoteConfig&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 组件的 Git 地址 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://192.168.1.44/publicrepos/demo1.git&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;credentialsId&amp;gt;&lt;/span&gt;31be0ffe-2c75-4183-9ab9-fd997a0942ea&lt;span class=&quot;nt&quot;&gt;&amp;lt;/credentialsId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/hudson.plugins.git.UserRemoteConfig&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/userRemoteConfigs&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/scm&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;builders&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;hudson.tasks.Shell&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 我们配置的执行 Shell 脚本命令 --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;command&amp;gt;&lt;/span&gt;/usr/bin/python /Users/pk/Documents/auto-scanner/auto-sonar.py publicplugingoup/basemapcomponent.git&lt;span class=&quot;nt&quot;&gt;&amp;lt;/command&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/hudson.tasks.Shell&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/builders&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;批量为每个组件创建 Jenkins 任务脚本&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
# coding=UTF-8
&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'''
g_old_branch 创建的模板文件 config.xml 中需要替换的分支名称
g_old_time 创建的模板文件 config.xml 中需要替换的触发时间
git_links.txt 组件的 Git 地址，逐行分开
config.xml 手动创建的一个 Jenkins 任务当做模板
批量创建完成结果在当前脚本的 xmls 文件夹下
'''&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g_old_branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;publicplugingoup/basemapcomponent&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g_old_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;H(0-29)/19 * * * *&quot;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 从URL获取分支名称，eg. [publicplugingoup, basemapcomponent]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_branch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_name_git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name_git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 逐行读取文件中的链接
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 储存行
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 根据当前索引顺序算出下一个时间，索引、时间步长、起始小时，起始分钟
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_scm_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1440&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 小时
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;begin_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begin_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;begin_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;next_minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;H(&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin_minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; * * *&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_time&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# 创建 config.xml 文件，传入链接列表，创建文件的保存路径, config.xml 文件路径
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 储存行
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;config_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 遍历链接列表
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;branch_group_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_branch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_group_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;链接无效：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_group_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 分组名
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_group_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 分支名称
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# 创建文件保存到以分支名命名的文件夹中
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;branch_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mkdir '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rm -rf '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;config_xml_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/config.xml&quot;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# 获取下一个运行的时间, 时间从0点0分开始，每10分钟运行一个组件
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;new_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_scm_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;config_copy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cg_line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cg_line&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_old_branch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_old_branch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_old_time&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_old_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;config_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_xml_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;已创建&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# main
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/xmls&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rm -rf '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mkdir '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;links_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/git_links.txt&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;links_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/config.xml&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;links_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmls_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;查找-xcodeproj-和-scheme-脚本&quot;&gt;查找 xcodeproj 和 Scheme 脚本&lt;/h2&gt;

&lt;p&gt;定时检测 Git 更新，使用脚本自动从 Git 拉取组件源码；自动查找定位项目 project 文件及项目 scheme，自动进行逐个扫描。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
# coding=UTF-8
&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'''
g_repos_folder 下拉代码，存放组件代码的路径
'''&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g_repos_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Desktop/GitJH&quot;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 找到 xcodeproj 工程文件
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find_project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_dir&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;name_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;file_suffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 获取后缀
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_suffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.xcodeproj&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 获取所有scheme
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_schemes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;proj_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xcodebuild_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cd '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proj_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' &amp;amp;&amp;amp; xcodebuild -list'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sch_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 标记找到Scheme
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xcodebuild_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Schemes:&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sch_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sch_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bundle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sch_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 自动拉取分支
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;git_clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 参数1 分组名称
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 参数2 分支名称
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# http://192.168.1.44/publicrepos/demo1.git
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;branch_link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://192.168.1.44/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.git&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git_pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cd &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &amp;amp;&amp;amp; git clone &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_link&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;git_pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cd &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &amp;amp;&amp;amp; git pull origin master&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;拉取：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 自动化 sonar 扫描
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;auto_sonar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argvs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argvs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Python 参数错误&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 分支绝对路径
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expanduser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'~'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_repos_folder&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;分支路径：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 拉取或者clone分支
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;git_clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 找到工程文件
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;branch_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;工程路径：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 找到所有scheme
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_schemes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;scheme 列表：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# shell 参数，参数1：分支名称；参数2：xcodeproj 文件全路径；参数3：scheme
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheme&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheme_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sh_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/run-sonar.sh'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;chmod 777 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sonar_pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sh '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proj_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheme&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sonar_pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 主程序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;python 参数必须带上 分组/分支名称&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;auto_sonar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;oclint-扫描上传-sonarqube-脚本&quot;&gt;OCLint 扫描上传 SonarQube 脚本&lt;/h2&gt;

&lt;p&gt;自动创建 Sonar 配置文件，扫描结果自动储存到数据库，通过网页查看结果。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 检测参数&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数1：分支名称不能为空&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数1：&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数2：xcodeproj 文件路径不能为空&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数2：&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数3：scheme 名称不能为空&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;参数3：&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 检测环境&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;which xcodebuild 2&amp;gt;/dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xcodebuild exist'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xcodebuild 未安装'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

if &lt;/span&gt;which oclint 2&amp;gt;/dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'oclint exist'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'oclint 未安装'&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi

if &lt;/span&gt;which xcpretty 2&amp;gt;/dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xcpretty exist'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xcpretty 未安装，执行 gem install xcpretty 安装'&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 获取路径和scheme&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;proj_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$proj_dir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;工程路径：&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$proj_dir&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 清除上次的缓存&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; ./derivedData &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;清理缓存...&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; ./derivedData
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;myworkspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;myscheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# xcodebuild clean&lt;/span&gt;
xcodebuild clean &lt;span class=&quot;nt&quot;&gt;-project&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myworkspace&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-scheme&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sdk&lt;/span&gt; iphoneos &lt;span class=&quot;nt&quot;&gt;-configuration&lt;/span&gt; Debug

&lt;span class=&quot;c&quot;&gt;# 生成编译数据&lt;/span&gt;
xcodebuild &lt;span class=&quot;nt&quot;&gt;-project&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myworkspace&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-scheme&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sdk&lt;/span&gt; iphoneos &lt;span class=&quot;nt&quot;&gt;-configuration&lt;/span&gt; Debug &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm64 &lt;span class=&quot;nv&quot;&gt;COMPILER_INDEX_STORE_ENABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NO | xcpretty &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; json-compilation-database &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; compile_commands.json

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./compile_commands.json &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;编译数据生成完毕&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;编译数据生成失败&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 生成报告目录&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; ./sonar-reports &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;sonar-reports
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 删除旧报告&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; sonar-reports/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;_oclint.xml &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; sonar-reports/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;_oclint.xml
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 分析编译数据&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;maxPriority&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15000
&lt;span class=&quot;c&quot;&gt;# Disable rules&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LINT_DISABLE_RULES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-disable-rule=LongClass &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=LongLine &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=LongMethod &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=LongVariableName &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=ShortVariableName &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=HighNcssMethod &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=DeepNestedBlock &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=TooManyFields &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=TooManyMethods &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=TooManyParameters &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
-disable-rule=IvarAssignmentOutsideAccessorsOrInit&quot;&lt;/span&gt;

oclint-json-compilation-database &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-report-type&lt;/span&gt; pmd &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; sonar-reports/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;_oclint.xml &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-max-priority-1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$maxPriority&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-max-priority-2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$maxPriority&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-max-priority-3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$maxPriority&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LINT_DISABLE_RULES&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; sonar-reports/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;_oclint.xml &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;分析完成&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;分析失败&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/\&amp;amp;/\&amp;amp;amp;/g'&lt;/span&gt; sonar-reports/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;_oclint.xml

&lt;span class=&quot;c&quot;&gt;# 生产配置文件&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; sonar-project.properties
&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; sonar-project.properties &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
sonar.projectKey=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
sonar.projectName=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
sonar.projectVersion=1.0
sonar.language=swift
sonar.sources=.
sonar.swift.simulator=platform=iphoneos,OS=latest
sonar.swift.project=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myworkspace&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
sonar.swift.appScheme=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$myscheme&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
sonar.swift.appConfiguration=Debug
sonar.sourceEncoding=UTF-8
sonar.swift.excludedPathsFromCoverage=.*Tests.*
sonar.swift.tailor.config=--no-color --max-line-length=100 --max-file-length=500 --max-name-length=40 --max-name-length=40 --min-name-length=4
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 储存到 sonar 数据库&lt;/span&gt;
/bin/sh sonar-scanner &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;脚本源码&quot;&gt;脚本源码&lt;/h2&gt;

&lt;p&gt;脚本源码已放在 Github 仓库 &lt;a href=&quot;https://github.com/muzipiao/dev-shell&quot;&gt;https://github.com/muzipiao/dev-shell&lt;/a&gt; 的 sonar-scan 文件夹下，组件 Git 路径和拉取到本地的路径有所不同，需要简单修改，这些脚本供学习参考。&lt;/p&gt;

&lt;p&gt;如果您觉得有所帮助，请在&lt;a href=&quot;https://github.com/muzipiao/dev-shell&quot;&gt;GitHub Shell&lt;/a&gt;上赏个Star ⭐️，您的鼓励是我前进的动力。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.csdn.net/weixin_43901866/article/details/86578648&lt;/li&gt;
  &lt;li&gt;https://www.jianshu.com/p/3b70aa6af07b&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2019/12/SonarQube-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%AB%E6%8F%8F/</link>
        <guid isPermaLink="true">https://cocoafei.top/2019/12/SonarQube-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%AB%E6%8F%8F/</guid>
        
        <category>SonarQube</category>
        
        
      </item>
    
      <item>
        <title>iOS 使用 SM2 SM4 加解密 SM2 签名验签及 SM3 摘要</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#1_0&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2_0&quot;&gt;国密全家桶&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3_0&quot;&gt;SM2 算法原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4_0&quot;&gt;集成 OpenSSL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5_0&quot;&gt;国密的 Objective-C 封装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6_0&quot;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a id=&quot;1_0&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;

&lt;p&gt;对于开发人员，开发中加解密是经常用到的，常见的密码算法 MD5、SHA、AES、DES，RSA 等等，这些无一例外都是国外的加密算法。基于安全和宏观战略考虑，我国从 2010 年先后推出了 SM1（SCB2）、SM2、SM3、SM4、SM7、SM9、ZUC（祖冲之密码算法）等密码算法，本文主要讨论 SM2 算法原理，iOS 端如何使用 SM2、SM4 加解密、SM2 签名验签及使用 SM3 生成摘要值。&lt;/p&gt;

&lt;h2 id=&quot;国密全家桶&quot;&gt;&lt;a id=&quot;2_0&quot;&gt;&lt;/a&gt;国密全家桶&lt;/h2&gt;

&lt;p&gt;国密算法中，SM1、SM4、SM7、ZUC 是对称算法；SM2、SM9是非对称算法；SM3是哈希算法。其中 SM1 和 SM7 分组密码算法不公开，SM1 主要用于加密芯片等重要领域，例如 智能 IC 卡，加密机等；SM7 主要用于常规非接触式 IC 卡，例如门禁卡，工作证等。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;算法&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;公开&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;类似&lt;/th&gt;
      &lt;th&gt;主要用途&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;否&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AES&lt;/td&gt;
      &lt;td&gt;智能IC卡、加密卡，加密机等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;RSA&lt;/td&gt;
      &lt;td&gt;重要信息的加解密，签名，如密码。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SHA&lt;/td&gt;
      &lt;td&gt;密码应用中的数字签名和验证，摘要等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AES&lt;/td&gt;
      &lt;td&gt;分组算法用于无线局域网产品。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;否&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AES&lt;/td&gt;
      &lt;td&gt;校园一卡通，门禁卡，工作证等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SM9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SSL&lt;/td&gt;
      &lt;td&gt;基于身份的密码，用于验证身份。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ZUC&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AES&lt;/td&gt;
      &lt;td&gt;4G 网络中的国际标准密码算法。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sm2-算法原理&quot;&gt;&lt;a id=&quot;3_0&quot;&gt;&lt;/a&gt;SM2 算法原理&lt;/h2&gt;

&lt;p&gt;SM2 算法是国密标准的非对称算法标准，基于ecc（Elliptic Curves Cryptography，椭圆曲线密码编码学）的扩展。提起非对称加密，自然想到了 RSA，对极大整数做因数分解的难度决定了RSA算法的可靠性（&lt;a href=&quot;http://cocoafei.top/2016/12/iOS-%E7%AB%AF-RSA-%E5%8A%A0%E5%AF%86/&quot;&gt;RSA 算法理解&lt;/a&gt;），这是 RSA 安全的基础。那国密加解密的算法基础是什么？首先我们先理解一下椭圆曲线。&lt;/p&gt;

&lt;h3 id=&quot;sm2-椭圆曲线&quot;&gt;SM2 椭圆曲线&lt;/h3&gt;

&lt;p&gt;国密 SM2 的算法基础是椭圆曲线，公式：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-math&quot;&gt;y^2 = x^3 + ax + b(4a^3 + 27b^2 ≠ 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那椭圆曲线长什么样子呢，百闻不如一见，图片能直观感受。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc01.png&quot; alt=&quot;椭圆曲线&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为什么需要满足呢？&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-math&quot;&gt;4a^3 + 27b^2 ≠ 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为当这个公式等于 0 时，它不是椭圆曲线。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc02.png&quot; alt=&quot;ab取值条件&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sm2-算法理解&quot;&gt;SM2 算法理解&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc03.png&quot; alt=&quot;倍点运算&quot; /&gt;&lt;/p&gt;

&lt;p&gt;结合上面这张图，我们了解一下 SM2 的几何意义。&lt;/p&gt;

&lt;h3 id=&quot;sm2-公私钥&quot;&gt;SM2 公私钥&lt;/h3&gt;

&lt;p&gt;算法是基于数学的，SM2 定义曲线上的群运算加减乘，通过公私钥的生成理解。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首选一条椭圆曲线，即固定 a、b 的值，假设选择的是上图所示曲线。&lt;/li&gt;
  &lt;li&gt;随机选择一个点 P 为基点，曲线做切线，经过 Q 点，切点 R1。&lt;/li&gt;
  &lt;li&gt;基于 x 轴做 R1 的对称点 R，则 SM2 定义加法为 P + Q = R，这就是椭圆曲线加法。&lt;/li&gt;
  &lt;li&gt;求 2 倍点，当 P = Q 时，即 P + P = R = 2P，则 R 是 P 的 2 倍点。&lt;/li&gt;
  &lt;li&gt;求 3 倍点，3P = P + 2P = P + R，经过 P、R 做直线，交于椭圆曲线点 M1, 基于 x 轴对称点 M 则是 3 倍点，依次类推。&lt;/li&gt;
  &lt;li&gt;求 d 倍点，假设我们同样次数为 d，运算倍点为 Q。&lt;/li&gt;
  &lt;li&gt;d 为私钥，Q 为公钥。所以私钥是一个大整数，公钥是一个点坐标。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;上面的几何推理是为了方便理解，实际取值都是在质数有限域上。密码专家们经过推理和运算，已经为我们选择了质数有限域上的最优椭圆曲线，除非有特殊需要，否则不需要自定义曲线。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc04.png&quot; alt=&quot;推荐曲线&quot; /&gt;&lt;/p&gt;

&lt;p&gt;p：椭圆曲线在质数 p 的有限域 Fp 上的点集合；&lt;/p&gt;

&lt;p&gt;a：椭圆曲线参数 a 的值；&lt;/p&gt;

&lt;p&gt;b：椭圆曲线参数 b 的值;&lt;/p&gt;

&lt;p&gt;n：取值范围，随机整数 d 的取值范围 [1,n-2]；&lt;/p&gt;

&lt;p&gt;Gx：基点的 x 坐标值，类似于点 P 的 x 坐标值；&lt;/p&gt;

&lt;p&gt;Gy：基点的 y 坐标值，类似于点 P 的 y 坐标值。&lt;/p&gt;

&lt;h3 id=&quot;sm2-加密&quot;&gt;SM2 加密&lt;/h3&gt;

&lt;p&gt;SM2 加密结果长度是固定的，例如密码为 123456 的 6 位数字，加密结果长度 = 64 + 32 + 6 = 102 字节，转为 16 进制字符串结果为 204 个字符。原文长度为 n，则加密结果长度 r  = 96 + n。&lt;/p&gt;

&lt;p&gt;加密过程：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc05.png&quot; alt=&quot;sm2加密&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设椭圆曲线为推荐曲线，公钥 Q，原文比特串 M，klen 为 M 的比特长度；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;计算随机椭圆曲线点 C1 = [k]G=(x1, y1)，k 是随机数，G为基点，计算出的倍点 C1 为 64 字节；&lt;/li&gt;
  &lt;li&gt;校验公钥 Q，计算椭圆曲线点 S=[h]Q，h为余因子，若S 为无穷点，退出；&lt;/li&gt;
  &lt;li&gt;计算椭圆曲线点 [k]PB=(x2, y2)，获取 x2，y2；&lt;/li&gt;
  &lt;li&gt;计算 t = KDF(x2||y2，klen)，若 t 为全 0 比特串，则返回步骤 1，KDF是 SM2 的密钥派生函数;&lt;/li&gt;
  &lt;li&gt;计算 C2= M⊕t，对明文加密，C2 是真正的密文，长度和原文相同；&lt;/li&gt;
  &lt;li&gt;计算 C3= Hash (x2||M|| y2)，生成杂凑值，用来效验数据，长度 32 字节；&lt;/li&gt;
  &lt;li&gt;输出密文 C=C1||C3||C2，C 为密文结果。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：OpenSSL 加密结果是经过 ASN1 格式化编码的，加密结果长度会不固定。加过过程中使用了随机数，所以每次加密结果都不一样。&lt;/p&gt;

&lt;h3 id=&quot;sm2-解密&quot;&gt;SM2 解密&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gmobjc/gmobjc06.png&quot; alt=&quot;sm2解密&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SM2 解密就是逆流程走一遍，注意 OpenSSL 解密要求传入的密文是 ASN1 编码的。&lt;/p&gt;

&lt;p&gt;设椭圆曲线为推荐曲线 私钥 d，密文 C（C=C1||C3||C2），klen 为密文中 C2 的比特长度。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;从 C 中取出比特串 C1（密文 C 的前 64 字节），将 C1 的数据类型转换为椭圆曲线上的点，验证 C1 是否满足椭圆曲线方程，若不满足则报错并退出;&lt;/li&gt;
  &lt;li&gt;计算椭圆曲线点 S= [h]C1，若 S 是无穷远点，则报错并退出；&lt;/li&gt;
  &lt;li&gt;计算[d]C1=(x2, y2)，将坐标 x2、y2 的数据类型转换为比特串；&lt;/li&gt;
  &lt;li&gt;计算 t = KDF(x2||y2，klen)，若 t 为全 0 比特串，则报错并退出；&lt;/li&gt;
  &lt;li&gt;从 C 中取出比特串 C2，计算 M’=C2⊕t；&lt;/li&gt;
  &lt;li&gt;计算 u = Hash (x2||M’|| y2)，从 C 中取出比特串 C3（密文 C 的后 32 字节），若 u≠C3，则报错并退出；&lt;/li&gt;
  &lt;li&gt;输出明文 M’，M’ 就是解密后的明文。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;集成-openssl&quot;&gt;&lt;a id=&quot;4_0&quot;&gt;&lt;/a&gt;集成 OpenSSL&lt;/h2&gt;

&lt;p&gt;OpenSSL 1.1.1 以上版本增加了对 SM2/SM3/SM4 密码算法的支持，我们可以直接使用 OpenSSL 实现国密加解密。需要注意的是，OpenSSL 没有官方版本的 cocoapods 版本，我们需要自行将 OpenSSL 编译为 framework。然而，当检查打包完成的静态库时，发现并未暴露国密的头文件，解决办法很简单，打开下载的 OpenSSL 源码，将 crypto/include/internal 路径下的 sm2.h、sm3.h，sm4.h 都拖到 openssl.framework/Headers 文件夹下即可。&lt;/p&gt;

&lt;p&gt;如果想通过 cocoapods 集成 OpenSSL，或者不会编译，我已经将编译完成的 OpenSSL.framework 上传至 cocoapods，编辑 Podfile 文件，添加 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod 'GMObjC'&lt;/code&gt;，保存执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt; 即可。&lt;/p&gt;

&lt;p&gt;若想自行编译，在 GitHub 有开源的编译脚本 &lt;a href=&quot;https://github.com/muzipiao/GMOpenSSL&quot;&gt;https://github.com/muzipiao/GMOpenSSL&lt;/a&gt;，下载根据说明编译即可。&lt;/p&gt;

&lt;h2 id=&quot;国密的-objective-c-封装&quot;&gt;&lt;a id=&quot;5_0&quot;&gt;&lt;/a&gt;国密的 Objective-C 封装&lt;/h2&gt;

&lt;p&gt;OpenSSL 实现了 SM2/SM3/SM4 密码算法，但没有注释说明，且纯 C 的 API 用起来不方便。所以，对 SM2/SM3/SM4 进行了 Objective-C 封装，方便在 iOS 端使用。&lt;/p&gt;

&lt;p&gt;具体封装过程不再详解，开源项目，可自行查看源码。实现过程有点坎坷，尤其 SM2 加解密，后台是对 C1||C3||C2 拼接的原始密文进行操作，而 OpenSSL 加解密都是 ASN1 编码格式，还好 OpenSSL 是开源项目，查看源码找到了原因。&lt;/p&gt;

&lt;p&gt;查看具体实现过程，请至开源项目地址&lt;a href=&quot;https://github.com/muzipiao/GMObjC&quot;&gt;https://github.com/muzipiao/GMObjC&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;sm2-加解密&quot;&gt;sm2 加解密&lt;/h3&gt;

&lt;p&gt;sm2 加解密，加密传入待加密字符串和公钥，解密传入密文和私钥即可，代码：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 公钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPubkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;0408E3FFF9505BCFAF9307E665E9229F4E1B3936437A870407EA3D97886BAFBC9C624537215DE9507BC0E2DD276CF74695C99DF42424F28E9004CDE4678F63D698&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 私钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPrikey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;90F3A42B9FE24AB196305FD92EC82E647616C3A3694441FB3422E7838E24DEAE&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 待加密的字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;123456&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 加密&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PublicKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 解密&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plainText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encodeCtext&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrivateKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPrikey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;OpenSSL 所用公钥是 04 开头的，后台返回公钥可能是不带 04 的，需要手动拼接。&lt;/li&gt;
  &lt;li&gt;后台返回的解密结果可能是没有标准编码的原始密文，而 OpenSSL 的加解密都是需要 ASN1 编码格式，所以与后台交互过程中，可能需要 ASN1 编码解码。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;sm2-签名验签&quot;&gt;sm2 签名验签&lt;/h3&gt;

&lt;p&gt;sm2 私钥签名，公钥验签，可防篡改或验证身份。签名时传入明文、私钥和用户 ID；验签时传入明文、签名、公钥和用户 ID，代码：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 公钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPubkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;0408E3FFF9505BCFAF9307E665E9229F4E1B3936437A870407EA3D97886BAFBC9C624537215DE9507BC0E2DD276CF74695C99DF42424F28E9004CDE4678F63D698&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 私钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPrikey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;90F3A42B9FE24AB196305FD92EC82E647616C3A3694441FB3422E7838E24DEAE&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 待签名的原文&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;123456&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 这里传入自定义 ID，和服务器保持两端一致即可。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;lifei_zdjl@126.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 签名结果(r+s)拼接的 16 进制字符&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrivateKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPrikey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 验签，isOK 为 YES 验签通过，NO 为未通过&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isOK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Sign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signStr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PublicKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gPubkey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 对签名结果 Der 编码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;derSign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeWithDer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 对 Der 编码解码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;originStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeWithDer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;derSign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户 ID 可传空值，当传空值时使用 OpenSSL 默认用户 ID，OpenSSL 中默认用户定义为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#define SM2_DEFAULT_USERID &quot;1234567812345678&quot;&lt;/code&gt; ，客户端和服务端用户 ID 要保持一致。&lt;/li&gt;
  &lt;li&gt;客户端和后台交互的过程中，假设后台签名，客户端验签，后台返回的签名是 DER 编码格式，就需要先对签名进行 DER 解码，然后再进行验签。同理，若客户端签名，后台验签，根据后台是需要 (r, s) 拼接格式签名，还是 DER 格式，进行编码解码。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;sm4-加解密&quot;&gt;sm4 加解密&lt;/h3&gt;

&lt;p&gt;sm4 加解密都很简单，加密传入待加密字符串和密钥，解密传入密文和密钥即可，代码：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 待加密字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;123456&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 生产 sm4 密钥，注意为 16 字节字母数字符号混合的字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm4Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSm4Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 生成16位密钥&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// sm4 加密&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Ctext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm4Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// sm4 解密&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Ptext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm4Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Ctext&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm4Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sm3-摘要&quot;&gt;sm3 摘要&lt;/h3&gt;

&lt;p&gt;类似于 hash、md5，sm3 摘要算法可对文本文件进行摘要计算，摘要长度为 64 个字符的字符串格式。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 待提取摘要的字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;123456&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 字符串的摘要&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwdDigest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm3Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashWithString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 对文件进行摘要计算，传入 NSData 即可&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txtPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pathForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;sm4TestFile.txt&quot;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ofType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSData&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dataWithContentsOfFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txtPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 文件的摘要值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDigest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm3Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashWithData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asn1-编码解码&quot;&gt;ASN1 编码解码&lt;/h3&gt;

&lt;p&gt;OpenSSL 对 sm2 加密结果进行了 ASN1 编码，解密时也是要求密文编码格式为 ASN1 格式，其他平台加解密可能需要 C1C3C2 拼接的原始密文，所以需要编码解码，代码：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ASN1 编码的密文&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;30:6F:02:21:00:D4:F1:B3:2E:29:50:1E:94:44:46:7F:9E:2E:51:36:1E:91:F5:EC:0B:96:F3:34:94:E5:50:82:9F:00:CC:B5:B7:02:20:04:42:83:DF:76:21:B2:9C:EB:7F:64:8B:B4:7A:3C:BF:FE:97:47:E4:D2:BD:47:44:C9:DA:1D:68:12:23:43:D6:04:20:45:F6:AB:54:22:71:63:93:95:3B:58:E3:8D:90:32:B7:A1:D8:76:2B:B8:16:F2:6A:83:51:77:44:2D:28:2C:D2:04:06:62:9F:38:6A:77:76&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 对 ASN1 编码的密文解码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decodeStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeWithASN1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 原始密文(C1C3C2 直接拼接)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dCtext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;D4F1B32E29501E9444467F9E2E51361E91F5EC0B96F33494E550829F00CCB5B7044283DF7621B29CEB7F648BB47A3CBFFE9747E4D2BD4744C9DA1D68122343D645F6AB5422716393953B58E38D9032B7A1D8762BB816F26A835177442D282CD2629F386A7776&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 对 C1C3C2 直接拼接的原始密文 ASN1 编码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encodeStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeWithASN1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dCtext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;生成公私钥&quot;&gt;生成公私钥&lt;/h3&gt;

&lt;p&gt;基于 sm2 推荐曲线（素数域 256 位椭圆曲线），生成公私钥。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 生成公私钥对，数组元素 1 为公钥，2 为私钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMSm2Utils&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createPublicAndPrivateKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 公钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pubKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 私钥&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;&lt;a id=&quot;6_0&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sca.gov.cn/sca/xwdt/2010-12/17/1002386/files/b791a9f908bb4803875ab6aeeb7b4e03.pdf&quot;&gt;SM2椭圆曲线公钥密码算法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sca.gov.cn/sca/xwdt/2010-12/17/1002386/files/b965ce832cc34bc191cb1cde446b860d.pdf&quot;&gt;SM2椭圆曲线公钥密码算法推荐曲线参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.wandoer.com/note/eccelliptic-curves-cryptography-%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86.htm&quot;&gt;椭圆曲线加密原理&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%AF%86%E7%A0%81%E5%AD%A6&quot;&gt;椭圆曲线密码学&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;p&gt;如果您觉得有所帮助，请在 &lt;a href=&quot;https://github.com/muzipiao/GMObjC&quot;&gt;GitHub GMObjC&lt;/a&gt; 上赏个Star ⭐️，您的鼓励是我前进的动力。&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Aug 2019 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2019/08/iOS-%E4%BD%BF%E7%94%A8-SM2-SM4-%E5%8A%A0%E8%A7%A3%E5%AF%86-SM2-%E7%AD%BE%E5%90%8D%E9%AA%8C%E7%AD%BE%E5%8F%8A-SM3-%E6%91%98%E8%A6%81/</link>
        <guid isPermaLink="true">https://cocoafei.top/2019/08/iOS-%E4%BD%BF%E7%94%A8-SM2-SM4-%E5%8A%A0%E8%A7%A3%E5%AF%86-SM2-%E7%AD%BE%E5%90%8D%E9%AA%8C%E7%AD%BE%E5%8F%8A-SM3-%E6%91%98%E8%A6%81/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>iOS 如何准确显示角标</title>
        <description>&lt;h2 id=&quot;本地设置角标&quot;&gt;本地设置角标&lt;/h2&gt;

&lt;p&gt;iOS 显示角标很容易，在 App 中任意地方调用如下方法都可设置，根据自己的需要设定即可。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 显示角标，传入待显示角标的数字&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sharedApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setApplicationIconBadgeNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 清除角标，传入 0 即可&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sharedApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setApplicationIconBadgeNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;不精确显示角标&quot;&gt;不精确显示角标&lt;/h2&gt;

&lt;p&gt;普通 App 对角标数字要求没那么高，服务端或控制台推送时，总是将推送个数设置为 1，用户点击进入 App 时清除角标。这样简单的做法，能满足大部分 App 的需求。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 进入 App 时清除角标&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;launchOptions&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applicationIconBadgeNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 从后台进入前台时清除角标&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;applicationWillEnterForeground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applicationIconBadgeNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样做的缺点也很明显，收到多条推送角标数量时角标永远显示 1，用户进入 App 不管是否点击推送的消息，都消除角标。如果要求较高，如何做到精确显示角标呢？&lt;/p&gt;

&lt;h2 id=&quot;精确显示角标&quot;&gt;精确显示角标&lt;/h2&gt;

&lt;p&gt;首先我们要了解一下，手机收到推送消息是如何显示角标数量的。如下所示APNS 按照此格式推送到手机，客户端显示的角标数量为推送的 badge 数值。手机收到推送消息，badge 的值是多少，角标显示的个数就是多少（最大 99999）。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;aps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;alert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;这里是推送显示的消息串&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;badge&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sound&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;custom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以，我们想要精准显示角标数量，必须在客户端读取消息后，客户端上报用户已读消息，将推送消息阅读情况同步到服务器，如极光或者个推。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 极光和个推同步到服务器的 API 相同，调用可同步到服务器&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// value 取值范围：[0,99999]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resetBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// 相当于 [setBadge:0]，清空角标&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;假设服务器推送了 6 条消息，客户点击阅读了 2 条，那我们在设置 App 角标的同时，将未读个数同步到服务器&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 调用系统方法设置 App 显示的角标个数 4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sharedApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setApplicationIconBadgeNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 个推 SDK 同步到服务器&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GeTuiSdk&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 极光 SDK 同步到服务器&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JPush&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考文档&quot;&gt;参考文档&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://community.jiguang.cn/t/topic/13924&quot;&gt;极光文档 - 角标控制&lt;/a&gt;
&lt;a href=&quot;http://docs.getui.com/getui/mobile/ios/api/&quot;&gt;个推文档 - 角标控制&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Jun 2019 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2019/06/iOS-%E5%A6%82%E4%BD%95%E5%87%86%E7%A1%AE%E6%98%BE%E7%A4%BA%E8%A7%92%E6%A0%87/</link>
        <guid isPermaLink="true">https://cocoafei.top/2019/06/iOS-%E5%A6%82%E4%BD%95%E5%87%86%E7%A1%AE%E6%98%BE%E7%A4%BA%E8%A7%92%E6%A0%87/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>自建局域网 OTA 服务器</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#1_0&quot;&gt;第一步 编辑前的准备&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2_0&quot;&gt;第二步 配置Http服务&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3_0&quot;&gt;第三步 生成自签名证书&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4_0&quot;&gt;第四步 配置HTTPS服务&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5_0&quot;&gt;第五步 放置资源文件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6_0&quot;&gt;参考链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;第一步-编辑前的准备&quot;&gt;&lt;a id=&quot;1_0&quot;&gt;&lt;/a&gt;第一步 编辑前的准备&lt;/h2&gt;

&lt;h4 id=&quot;11-mac自带-apache-服务器&quot;&gt;1.1 Mac自带 Apache 服务器&lt;/h4&gt;

&lt;p&gt;Mac 自带 Apache 服务器，我们在终端输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo apachectl -k start &lt;/code&gt;打开网页输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; localhost&lt;/code&gt;，发现网页会显示如下：&lt;/p&gt;

&lt;h5 id=&quot;it-works&quot;&gt;It works!&lt;/h5&gt;

&lt;p&gt;Apache 服务器启动成功。&lt;/p&gt;

&lt;h4 id=&quot;12-修改系统文件前先备份&quot;&gt;1.2 修改系统文件前先备份&lt;/h4&gt;

&lt;p&gt;例如需要修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /etc/apache2 &lt;/code&gt;文件夹下 http.conf 文件&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;切换工作目录下：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; cd /etc/apache2 &lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;备份文件，只需要执行一次：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo cp httpd.conf httpd.conf.bak &lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;如果操作出现错误！可以使用命令，恢复备份的 httpd.conf 文件：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo cp httpd.conf.bak httpd.conf &lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;13-通过-xcode-或者-vim-修改系统文件&quot;&gt;1.3 通过 Xcode 或者 vim 修改系统文件&lt;/h4&gt;

&lt;p&gt;通过 Xcode 修改比较简单，将文件脱出到桌面一份，修改后拖回原来的文件夹覆盖即可。&lt;/p&gt;

&lt;p&gt;注意的是，在&lt;strong&gt;系统目录下是不可以直接用 Xcode 修改&lt;/strong&gt;的，可将文件复制到桌面上，用 Xcode 打开修改，然后拖入系统目录下覆盖即可。&lt;/p&gt;

&lt;p&gt;通过 vim 修改文件，可直接修改系统文件，修改比较方便。以下修改系统配置文件用到vim，如果不习惯使用vim修改，可使用 Xcode 编辑修改。&lt;/p&gt;

&lt;h4 id=&quot;14-vim-简单操作&quot;&gt;1.4 vim 简单操作&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;例如当前目录下有一个 httpd.conf 文件，需要修改第 100 行为 abcdef。&lt;/li&gt;
  &lt;li&gt;输入命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo vim httpd.conf &lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;鼠标滚动或者按上下键光标移动到第 100 行，按 i 键进入编辑模式
将第 100 行内容删除并替换为 abcdef 。&lt;/li&gt;
  &lt;li&gt;按&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; esc &lt;/code&gt;键退出编辑。&lt;/li&gt;
  &lt;li&gt;输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; :wq &lt;/code&gt;退出并保存；如果编辑错误输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:q! &lt;/code&gt;不保存文件，强制退出vi。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;第二步-配置http服务&quot;&gt;&lt;a id=&quot;2_0&quot;&gt;&lt;/a&gt;第二步 配置Http服务&lt;/h2&gt;

&lt;h4 id=&quot;21-创建-web-文件夹&quot;&gt;2.1 创建 web 文件夹&lt;/h4&gt;

&lt;p&gt;我们在当前用户根目录下新建一个web文件夹，然后放入一些文件，如图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota2.1.png&quot; alt=&quot;web 文件夹&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;22-编辑-httpconf-文件&quot;&gt;2.2 编辑 http.conf 文件&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;切换工作目录下：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; cd /etc/apache2 &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;备份文件：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo cp httpd.conf httpd.conf.bak &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用vim编辑httpd.conf文件：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo vim httpd.conf &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;将下面路径更改为你自己web网页路径（约245行）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DocumentRoot &lt;span class=&quot;s2&quot;&gt;&quot;/Library/WebServer/Documents&quot;&lt;/span&gt;
&amp;lt;Directory &lt;span class=&quot;s2&quot;&gt;&quot;/Library/WebServer/Documents”&amp;gt;

修改为我当前用户目录下建立的一个 web 文件夹

DocumentRoot &quot;&lt;/span&gt;/Users/lf/web&lt;span class=&quot;s2&quot;&gt;&quot;
&amp;lt;Directory &quot;&lt;/span&gt;/Users/lf/web”&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;为了便于浏览 web 文件夹，添加 Indexes 字段&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Options FollowSymLinks Multiviews

修改为

Options Indexes FollowSymLinks Multiviews
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota2.2.5.png&quot; alt=&quot;修改httpd&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;将下面的#号注释去掉，开启PHP（约177行）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#LoadModule php7_module libexec/apache2/libphp7.so&lt;/span&gt;

修改为

LoadModule php7_module libexec/apache2/libphp7.so

较旧的系统为（#LoadModule php5_module libexec/apache2/libphp5.so）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota2.2.6.png&quot; alt=&quot;开启PHP&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;然后按 ESC 键退出编辑，输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; :wq &lt;/code&gt;保存退出。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;终端中输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo apachectl -k restart &lt;/code&gt;重启 Apache 服务器。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;开启 apache 服务器.打开浏览器,搜索框中输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; 127.0.0.1 &lt;/code&gt;或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; localhost &lt;/code&gt;就可以看到我们之前添加的网络资源。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota2.2.9.png&quot; alt=&quot;开启HTTP服务成功&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;23-apache-常用操作命令&quot;&gt;2.3 Apache 常用操作命令&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 启动 apache 服务器&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; start

&lt;span class=&quot;c&quot;&gt;# 重新启动 apache 服务器&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; restart

&lt;span class=&quot;c&quot;&gt;# 关闭 apache 服务器&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;24-重启时报错&quot;&gt;2.4 重启时报错&lt;/h4&gt;

&lt;p&gt;重启的时候发现报错，但不影响使用&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota2.4.png&quot; alt=&quot;ServerName错误&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AH00558: httpd: Could not reliably determine the server's fully

qualified domain name, using LFdeMacBook-Pro.local. Set the

'ServerName' directive globally to suppress this message
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想解决此报错，可再次编辑 httpd.conf 文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo vim httpd.conf &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将下面的#号注释去掉，并修改（约221行）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#ServerName www.example.com:80&lt;/span&gt;

修改为

ServerName localhost:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后终端输入下面指令重启即可。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;第三步-生成自签名证书&quot;&gt;&lt;a id=&quot;3_0&quot;&gt;&lt;/a&gt;第三步 生成自签名证书&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;iOS7.1 以后， Apple 不再支持 HTTP 方式的 OTA ，所以需要为 Apache 开启 HTTPS 服务，并利用 OpenSSL 制作自签名证书。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;31-生成服务器私钥-serverkey&quot;&gt;3.1 生成服务器私钥 server.key&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /private/etc/apache2/ssl 

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /private/etc/apache2/ssl

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl genrsa &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; server.key 1024
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;生成如下所示文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota3.1.png&quot; alt=&quot;服务器私钥&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;32-生成签署申请&quot;&gt;3.2 生成签署申请&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-new&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-key&lt;/span&gt; server.key &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; server.csr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：需要完整填写各项信息，注意&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Common Name &lt;/code&gt;必须是服务器 ip 或域名，其他信息可以随意填写。例如我需要把 ipa 安装包放在 192.168.1.188 的内网服务器上，则&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Common Name &lt;/code&gt;就填写 192.168.1.188 。如果这一步漏填信息，可能会导致最后生成的 ca 文件是空的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota3.2.png&quot; alt=&quot;生成server.csr&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;33-生成-ca-私钥cacrt&quot;&gt;3.3 生成 CA 私钥ca.crt&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl req  &lt;span class=&quot;nt&quot;&gt;-new&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x509&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-days&lt;/span&gt; 365 &lt;span class=&quot;nt&quot;&gt;-key&lt;/span&gt; server.key &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; ca.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;填写信息和上面的填写的一样即可，注意&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Common Name &lt;/code&gt;必须填写，这里还是填写192.168.1.188即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota3.3.png&quot; alt=&quot;生成ca.crt&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;34-创建文件和文件夹&quot;&gt;3.4 创建文件和文件夹&lt;/h4&gt;

&lt;p&gt;在 ssl 目录下创建 demoCA 文件夹，然后进入 demoCA ，创建一个 index.txt 和 serial文件，index.txt 为空， serial 内容为01，然后在 demoCA 中再创建一个空文件夹 newcerts&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir &lt;/span&gt;demoCA &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;demoCA

&lt;span class=&quot;nb&quot;&gt;sudo mkdir &lt;/span&gt;newcerts

&lt;span class=&quot;nb&quot;&gt;sudo touch &lt;/span&gt;index.txt

&lt;span class=&quot;nb&quot;&gt;sudo touch &lt;/span&gt;serial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 Xcode 或者 vim 编辑 serial 文件，第一行写入 01 保存即可。&lt;/p&gt;

&lt;h4 id=&quot;35-签名生成servercrt&quot;&gt;3.5 签名生成server.crt&lt;/h4&gt;

&lt;p&gt;执行命令，返回到ssl文件夹下面&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /private/etc/apache2/ssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后执行命令，用ca进行签名生成server.crt&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl ca &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; server.csr &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; server.crt &lt;span class=&quot;nt&quot;&gt;-cert&lt;/span&gt; ca.crt &lt;span class=&quot;nt&quot;&gt;-keyfile&lt;/span&gt; server.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这一步可能会报如下错误&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Using configuration from /private/etc/ssl/openssl.cnf

variable lookup failed for ca::default_ca140736040362952:

error:0E06D06C:configuration file routines:NCONF_get_string:

no value:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/

libressl-22.50.2/libressl/crypto/conf/conf_lib.c:323:group=ca name=default_ca
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是由于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /private/etc/ssl/ &lt;/code&gt;文件夹下缺少 openssl.cnf 的问题，解决办法是拷贝一份，输入命令&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/local/etc/openssl/openssl.cnf /private/etc/ssl/openssl.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用Xcode或者vim修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /private/etc/ssl/openssl.cnf &lt;/code&gt;文件，这里使用vim直接修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /private/etc/ssl/openssl.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ./demoCA        &lt;span class=&quot;c&quot;&gt;# Where everything is kept&lt;/span&gt;
修改为当前你的demoCA路径
&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  /private/etc/apache2/ssl/demoCA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改完成后再执行命令&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl ca &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; server.csr &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; server.crt &lt;span class=&quot;nt&quot;&gt;-cert&lt;/span&gt; ca.crt &lt;span class=&quot;nt&quot;&gt;-keyfile&lt;/span&gt; server.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;会提示有效期和生成证书，都输入y即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota3.5.1.png&quot; alt=&quot;生成证书成功提示&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Certificate is to be certified until Nov 10 06:39:36 2019 GMT (365 days)
Sign the certificate? [y/n]:y
（翻译）证书有效期至11月10日06:39:36 2019 GMT(365天)
1 out of 1 certificate requests certified, commit? [y/n]y
签署的证书吗?
（翻译）1 / 1的证书请求被认证，提交?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时我们看到 HTTPS 证书已经生成完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota3.5.2.png&quot; alt=&quot;证书列表&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;第四步-配置https服务&quot;&gt;&lt;a id=&quot;4_0&quot;&gt;&lt;/a&gt;第四步 配置HTTPS服务&lt;/h2&gt;

&lt;h4 id=&quot;41-编辑-httpdconf-文件&quot;&gt;4.1 编辑 httpd.conf 文件&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /private/etc/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把以下四行代码前头的注释去掉&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LoadModule ssl_module libexec/apache2/mod_ssl.so

LoadModule socache_shmcb_module

libexec/apache2/mod_socache_shmcb.so

Include /private/etc/apache2/extra/httpd-ssl.conf

Include /private/etc/apache2/extra/httpd-vhosts.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：如果你的 httpd.conf 中缺少了某行，你可以自行添加进去即可。&lt;/p&gt;

&lt;h4 id=&quot;42-编辑-httpd-sslconf-文件&quot;&gt;4.2 编辑 httpd-ssl.conf 文件&lt;/h4&gt;

&lt;p&gt;编辑前先备份 httpd-ssl.conf 文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /private/etc/apache2/extra/ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo cp &lt;/span&gt;httpd-ssl.conf httpd-ssl.conf.bak

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /private/etc/apache2/extra/httpd-ssl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把以下两行代码的注释去掉，并编辑为你的证书路径&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SSLCertificateFile &quot;/private/etc/apache2/server.crt&quot;
SSLCertificateKeyFile &quot;/private/etc/apache2/server.key&quot;

然后修改路径，改成你的证书文件路径

SSLCertificateFile &quot;/private/etc/apache2/ssl/server.crt&quot;
SSLCertificateKeyFile &quot;/private/etc/apache2/ssl/server.key&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;43-编辑-httpd-vhostsconf-文件&quot;&gt;4.3 编辑 httpd-vhosts.conf 文件&lt;/h4&gt;

&lt;p&gt;编辑前先备份 httpd-vhosts.conf 文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /private/etc/apache2/extra/ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo cp &lt;/span&gt;httpd-vhosts.conf httpd-vhosts.conf.bak

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /private/etc/apache2/extra/httpd-vhosts.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将 &amp;lt;VirtualHost *:80&amp;gt; 中的第二个修改&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
ServerAdmin 192.168.1.188
DocumentRoot &quot;/Users/lf/web&quot;
ServerName 192.168.1.188
ErrorLog &quot;/private/var/log/apache2/dummy-host2.example.com-error_log&quot;
CustomLog &quot;/private/var/log/apache2/dummy-host2.example.com-access_log&quot; common
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后在文件末尾添加 443 端口服务&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;VirtualHost *:443&amp;gt; 
SSLEngine on 
SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
SSLCertificateFile /private/etc/apache2/ssl/server.crt
SSLCertificateKeyFile /private/etc/apache2/ssl/server.key
ServerName 192.168.1.188
DocumentRoot &quot;/Users/lf/web&quot;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSLCertificateFile 填写生成的 server.crt&lt;/li&gt;
  &lt;li&gt;SSLCertificateKeyFile 填写生成的 server.key&lt;/li&gt;
  &lt;li&gt;ServerName 填写你的 ip&lt;/li&gt;
  &lt;li&gt;DocumentRoot 填写你的站点路径&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;44-检查-apache-配置&quot;&gt;4.4 检查 Apache 配置&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apachectl configtest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果它提示：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; Syntax OK &lt;/code&gt;，那就完成90%了，如果它提示有错，那就要根据错误提示自行解决了。&lt;/p&gt;

&lt;p&gt;我在这个环节遇到了一个错误&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SSLSessionCache: 'shmcb' session cachenot supported 
(known names: ). Maybe you need toload the appropriate
socache module (mod_socache_shmcb?).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解决办法如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /private/etc/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后把以下代码的注释去掉&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LoadModule socache_shmcb_module libexec/apache2/mod_socache_shmcb.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;去掉注释后，保存，重新检查配置，直到成功。&lt;/p&gt;

&lt;p&gt;注意：
从网上查找的路径可能是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; LoadModule socache_shmcb_module modules/mod_socache_shmcb.so &lt;/code&gt;，
但我的配置文件中，路径跟上述的不一致，但结尾都是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; mod_socache_shmcb.so &lt;/code&gt;就对了。&lt;/p&gt;

&lt;p&gt;解决方案是参考这篇文章的&lt;a href=&quot;http://stackoverflow.com/questions/20127138/apache-2-4-configuration-for-ssl-not-working&quot;&gt;stackoverflow问答&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;重启 Apache 服务&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; sudo apachectl -k restart &lt;/code&gt;，
这样就可以用 https 访问本地服务器了。&lt;/p&gt;

&lt;h2 id=&quot;第五步-放置资源文件&quot;&gt;&lt;a id=&quot;5_0&quot;&gt;&lt;/a&gt;第五步 放置资源文件&lt;/h2&gt;

&lt;h4 id=&quot;51-网站资源文件&quot;&gt;5.1 网站资源文件&lt;/h4&gt;

&lt;p&gt;如下图所示，在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /Users/lf/web &lt;/code&gt;文件夹下放置的资源如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ota/ota5.1.png&quot; alt=&quot;资源文件夹&quot; /&gt;&lt;/p&gt;

&lt;p&gt;文件夹名称可任意取，只要在 index.html 和 plist 文件夹中路径对应即可。index.html 不要改名字，默认。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ca.crt  CA证书，将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /private/etc/apache2/ssl/ca.crt &lt;/code&gt;拷贝一份到当前 web 文件夹下&lt;/li&gt;
  &lt;li&gt;ipa 文件夹，放置 ipa 资源包&lt;/li&gt;
  &lt;li&gt;plist 文件夹，放置 plist 文件&lt;/li&gt;
  &lt;li&gt;index.html 索引网页，放置链接下载安装证书和ipa&lt;/li&gt;
  &lt;li&gt;images 文件夹，按照 Xcode 要求放置一个 57×57 和 512×512 的 png 图片，还没发现什么用途。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;52-放置-ipa-包&quot;&gt;5.2 放置 ipa 包&lt;/h4&gt;
&lt;p&gt;APP 打包，导出 ipa 包就没必要多说了，可以导出 Ad Hoc 或者 Development 的 ipa 包，将 ipa 放在放在 web 文件夹下 ipa 文件夹中。&lt;/p&gt;

&lt;h4 id=&quot;53-放置plist文件&quot;&gt;5.3 放置plist文件&lt;/h4&gt;

&lt;p&gt;想在线安装，还需要一个 plist 文件，每个 ipa 包对应一个 plist 文件，将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; https://192.168.1.188/ipa/LFDev_4.2.1.ipa &lt;/code&gt;更改为生成证书时的 ip 或者域名，然后对应 ipa 文件路径即可，例如这里的路经是，在当前 web 文件夹下的 ipa 文件夹中，名称为 LFDev_4.2.1.ipa 的 ipa 文件。&lt;/p&gt;

&lt;p&gt;plist 文件格式如下：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;items&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;assets&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software-package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://192.168.1.188/ipa/LFDev_4.2.1.ipa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;display-image&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://192.168.1.188/images/image_57×57.png&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;full-size-image&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;https://192.168.1.188/images/image_512×512.png&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;metadata&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-identifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.xxx.yyy&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-version&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;4.2.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Cxx&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;bundle-identifier的值com.xxx.yyy更改为你应用的Bundle ID&lt;/li&gt;
  &lt;li&gt;bundle-version的值4.2.0更改为你应用的版本version&lt;/li&gt;
  &lt;li&gt;title的值Cxx更改为你应用的名称，下载时会弹出安装提示此名称&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;54-创建索引下载网页-indexhtml&quot;&gt;5.4 创建索引下载网页 index.html&lt;/h4&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; /Users/lf/web &lt;/code&gt;文件夹下还需要一个 index.html 文件，
手机首次使用 OTA 安装，必须先下载安装 ca.crt 证书，然后再点击安装 ipa。
url 中必须填写 https 开头的 plist 文件下载地址，plist 文件中对应 ipa 文件的下载地址。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;手机首次下载请先&quot;点击安装SSL证书&quot;，并根据提示安装信任证书&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
在 iOS 10.3 及更高版本中，手动安装包含证书有效负载的描述文件时，这个证书不会自动受 SSL 信任。
当安装通过电子邮件发送或从网站下载的描述文件时，您必须手动开启受 SSL 信任。
要为这个证书开启受 SSL 信任，请前往“设置”&amp;gt;“通用”&amp;gt;“关于本机”&amp;gt;“证书信任设置”。在“针对根证书启用完全信任”下，开启信任这个证书。
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iPhone&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://192.168.1.188/ca.crt&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;👉点击安装SSL证书👈&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://192.168.1.188/plist/LFAdHoc_4.2.0.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app_link&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;👉点击安装4.2.0生产版本👈&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://192.168.1.188/plist/LFDev_4.2.1.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app_link&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;👉点击安装4.2.1开发版本👈&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;itms-services://?action=download-manifest&amp;amp;url=https://192.168.1.188/plist/LFVali_4.2.1.plist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app_link&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;👉点击安装4.2.1验证版本👈&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是想 ipa 放在局域网电脑上面，则将当做打包服务器的电脑 ip 手动设置固定 ip：192.168.1.188，然后手机和电脑连接同一个路由器，iphone 的 Safari 浏览器中输入 192.168.1.188 或者 192.168.1.188/index.html 即可，点击安装 SSL 证书，然后点击安装 ipa 包。&lt;/p&gt;

&lt;h4 id=&quot;55-ios-103-后必须设置证书信任&quot;&gt;5.5 iOS 10.3 后必须设置证书信任&lt;/h4&gt;

&lt;p&gt;如果下载 ipa 时出现无法连接到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; 192.168.*.* &lt;/code&gt;的错误，则需要手动设置信任。&lt;/p&gt;

&lt;p&gt;iOS7.0 以后必须使用 HTTPS 进行，iOS 10 之前的设备，直接安装自签名根证书后就可以安装 iOS 应用，但是在 iOS 10.3 以上的设备上，安装后还需要到“关于本机”那里手动开启信任。&lt;/p&gt;

&lt;p&gt;苹果官网提示，在 iOS 中信任手动安装的证书描述文件 &lt;a href=&quot;https://support.apple.com/zh-cn/HT204477&quot;&gt;https://support.apple.com/zh-cn/HT204477&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在 iOS 10.3 及更高版本中，手动安装包含证书有效负载的描述文件时，
这个证书不会自动受 SSL 信任。
当安装通过电子邮件发送或从网站下载的描述文件时，
您必须手动开启受 SSL 信任。
要为这个证书开启受 SSL 信任，
请前往“设置”&amp;gt;“通用”&amp;gt;“关于本机”&amp;gt;“证书信任设置”。
在“针对根证书启用完全信任”下，开启信任这个证书。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;参考链接&quot;&gt;&lt;a id=&quot;6_0&quot;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://stackoverflow.com/questions/20127138/apache-2-4-configuration-for-ssl-not-working&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Nov 2018 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2018/11/%E8%87%AA%E5%BB%BA%E5%B1%80%E5%9F%9F%E7%BD%91-OTA-%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <guid isPermaLink="true">https://cocoafei.top/2018/11/%E8%87%AA%E5%BB%BA%E5%B1%80%E5%9F%9F%E7%BD%91-OTA-%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>记一些印象深刻的 Bug</title>
        <description>&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;

&lt;p&gt;一、&lt;a href=&quot;#1_0&quot;&gt;iOS 加载超大尺寸图片 Crash 的调研及解决方案&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;二、&lt;a href=&quot;#2_0&quot;&gt;夏令时引起某些时间段转换为 NSDate 为 nil 问题的解决方案&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;三、&lt;a href=&quot;#3_0&quot;&gt;日期格式 YYYY-MM-dd 和 yyyy-MM-dd 区别&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;四、&lt;a href=&quot;#4_0&quot;&gt;iOS 局部 BOOL 变量随机值&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;五、&lt;a href=&quot;#5_0&quot;&gt;iPhone 用户名包含特殊符号引起的后台 Crash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;六、&lt;a href=&quot;#6_0&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-一ios-加载超大尺寸图片-crash-的调研及解决方案&quot;&gt;&lt;a id=&quot;1_0&quot;&gt;&lt;/a&gt; 一、iOS 加载超大尺寸图片 Crash 的调研及解决方案&lt;/h2&gt;

&lt;h3 id=&quot;-11问题描述&quot;&gt;&lt;a id=&quot;1_1&quot;&gt;&lt;/a&gt; 1.1、问题描述&lt;/h3&gt;

&lt;p&gt;前段时间遇到一个工单，客户反馈，只要进入订单列表界面 1~2 秒，客户端就会 Crash，订单列表界面示意如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/bugs/impressive1.1.0.png&quot; title=&quot;订单示意图&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-12问题分析&quot;&gt;&lt;a id=&quot;1_2&quot;&gt;&lt;/a&gt; 1.2、问题分析&lt;/h3&gt;

&lt;p&gt;由于是客户投诉的 Bug，没有 Debug 信息，先猜测各种情况，数组越界/后台传 nil 值/内存泄露/ KVO 赋未定义值等等；然而经过仔细分析模拟逐个排除了上述可能，仍查找不到 Crash 原因，百思不得其解。&lt;/p&gt;

&lt;p&gt;排除了代码的问题，只有可能是数据问题了，猜测是异常的图片/数据解析出现的问题，于是抽取用户订单数据分析，发现有 2 张尺寸非常大的 JPEG 图片，尺寸达到了 15000*8000 的像素，瞬间想明白了怎么回事，像素总量达到了一亿两千万，猜测是图片解压缩到内存后占用内存过大，导致系统内存紧张，因此系统杀死了 App 进程。&lt;/p&gt;

&lt;h3 id=&quot;-13问题验证&quot;&gt;&lt;a id=&quot;1_3&quot;&gt;&lt;/a&gt; 1.3、问题验证&lt;/h3&gt;

&lt;p&gt;验证是否因大尺寸图片引起的错误。验证过程如下：&lt;/p&gt;

&lt;p&gt;写一个类似上面订单列表的 Demo，点击 Cell 逐个加载大图图片，测试用的手机为 iPhone 7P，图片尺寸为（15000px*15000px），点击加载第二张图片就发生了 Crash，一般情况下，APP 占用系统内存 60% 左右就会被杀死进程。iPhone 7P 加载大图后的内存截图如下：&lt;/p&gt;

&lt;div style=&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src=&quot;/images/posts/bugs/impressive1.3.1.png&quot; title=&quot;Demo初始占用的内存&quot; width=&quot;160&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src=&quot;/images/posts/bugs/impressive1.3.2.png&quot; title=&quot;加载一张7000×7000大图内存&quot; width=&quot;160&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src=&quot;/images/posts/bugs/impressive1.3.3.png&quot; title=&quot;加载两张7000×7000大图内存&quot; width=&quot;160&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt; 不同手机由于内存和屏幕不一样，内存超限 App 发生 Crash 的条件不一样，其中 &lt;strong&gt;iPhone 6P&lt;/strong&gt; 是最容易 Crash 的，因为它有 5.5 寸的屏幕，却只有 &lt;strong&gt;1G 内存&lt;/strong&gt;，加载 Assets.xcassets 图片时会加载 3x 图片，同一张网络图片，UIImageView 布局一般会按照比例放大，大屏手机图片会放大，解码后占用内存也就更大。&lt;/p&gt;

&lt;h3 id=&quot;-14解决方案&quot;&gt;&lt;a id=&quot;1_4&quot;&gt;&lt;/a&gt; 1.4、解决方案&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;约定大于配置，上传图片也要遵守一定的约定。&lt;/strong&gt; 基于 SDWebImage/YYImage 等第三方库加载超大图引起的崩溃，可通过修改源码解决，但不建议这样做；修改源码可能会引起其他 Bug，而且大图毕竟是少数，没必要对所有图片都进行判断，个别大图单独处理即可。按照一定约定，通过管理平台限定上传图片尺寸大小，增加 APP 流畅度的同时，还能减少用户流量损失，此为最佳方案。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;缩放图片尺寸。&lt;/strong&gt; 如果是展示整张图片，不需要展示图片细节，受限于屏幕分辨率，太大尺寸的图片是没有意义的；如果需要做类似于图片浏览器，可对图片进行放大缩小操作的需求，大图预览的时候可加载缩略图，展示的时候切片处理。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-15ios-图片解码&quot;&gt;&lt;a id=&quot;1_5&quot;&gt;&lt;/a&gt; 1.5、iOS 图片解码&lt;/h3&gt;

&lt;p&gt;我们常见的图片格式例如 &lt;strong&gt;PNG/JPG/GIF&lt;/strong&gt; 等格式都属于&lt;strong&gt;图像压缩格式&lt;/strong&gt;，解压为位图后占用的内存会非常大。&lt;/p&gt;

&lt;p&gt;假设 iOS 系统从磁盘加载一张图片，首先将文件数据从磁盘读到内存中，此时在内存中仍旧是压缩格式，只有在需要的时机，才会把图片解码为无压缩的位图格式，最后 &lt;strong&gt;Core Animation&lt;/strong&gt; 使用未压缩的位图数据渲染 &lt;strong&gt;UIImageView&lt;/strong&gt; 的图层。&lt;/p&gt;

&lt;p&gt;将压缩的图片数据解码成未压缩的位图形式，这是一个耗时的 CPU 操作，&lt;strong&gt;SDWebimage/YYImage&lt;/strong&gt; 等第三方框架一般都会提前异步强制解码图片，保证了 UI 界面的流畅性。&lt;/p&gt;

&lt;h3 id=&quot;-16图片解码占用内存计算&quot;&gt;&lt;a id=&quot;1_6&quot;&gt;&lt;/a&gt; 1.6、图片解码占用内存计算&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;图片解码&lt;/strong&gt;后会占用多少内存呢？其实这个很好计算，苹果手机采用 24 位真彩色显示图像，也就是 24bit(3 字节，RGB 红绿蓝三原色分别占用 8bit，每个颜色有 256 种状态)，如果是不包含 Alpha 通道(透明度)的 RGB 图片，那每个像素占用的就是 3 字节，15000px*15000px*3Byte = 644MB，如果是包含透明度的 RGBA 图片，则为 15000px*15000px*4Byte = 858MB，如图2所示，加载一张长和宽 15000px 的图片，内存暴增 858MB。&lt;/p&gt;

&lt;h3 id=&quot;-17图片缩放最优选择&quot;&gt;&lt;a id=&quot;1_7&quot;&gt;&lt;/a&gt; 1.7、图片缩放最优选择&lt;/h3&gt;

&lt;p&gt;最常用的图片缩放方法是使用 &lt;strong&gt;CGContext&lt;/strong&gt; 的 &lt;strong&gt;UIGraphicsGetImageFromCurrentImageContext&lt;/strong&gt; 方法对图片进行裁剪缩放，能够满足大部分需求。但如果是处理多张大图，这时候就需要优化缩放速度了，可通过 Image I/O 框架对图片进行缩放，在工程中添加 &lt;strong&gt;Image I/O Framework&lt;/strong&gt;，然后在需要使用的地方 &lt;strong&gt;#import &amp;lt;ImageIO/ImageIO.h&amp;gt;&lt;/strong&gt; 即可，示例代码如下：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//maxPixelSize MUST BE a valid value.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;thumbImageFromLargeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withConfirmedMaxPixelSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;maxPixelSize&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Create the image source (from path)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CGImageSourceRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CGImageSourceCreateWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__bridge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFURLRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileURLWithPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create thumbnail options&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CFDictionaryRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__bridge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFDictionaryRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kCGImageSourceCreateThumbnailWithTransform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;@YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kCGImageSourceCreateThumbnailFromImageAlways&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;@YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kCGImageSourceThumbnailMaxPixelSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxPixelSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Generate the thumbnail&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CGImageRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thumbnail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CGImageSourceCreateThumbnailAtIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CFRelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;UIImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithCGImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CFRelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-二夏令时引起某些时间段转换为-nsdate-为-nil-问题的解决方案&quot;&gt;&lt;a id=&quot;2_0&quot;&gt;&lt;/a&gt; 二、夏令时引起某些时间段转换为 NSDate 为 nil 问题的解决方案&lt;/h2&gt;

&lt;h3 id=&quot;-21问题描述&quot;&gt;&lt;a id=&quot;2_1&quot;&gt;&lt;/a&gt; 2.1、问题描述&lt;/h3&gt;

&lt;p&gt;开发中我们经常会处理用户的生日，例如下面的代码，将用户生日转换为NSDate，例如下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birthStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;1986-05-04&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDateFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dateFromString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birthStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;timeStr to date is %@ %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这时候我们会惊奇的发现，birDate 为 nil ？嗯，nil。&lt;/p&gt;

&lt;h3 id=&quot;-22问题分析&quot;&gt;&lt;a id=&quot;2_2&quot;&gt;&lt;/a&gt; 2.2、问题分析&lt;/h3&gt;

&lt;p&gt;通过Google搜索及测试，最终定位在了夏令时问题上。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我国解放前几年在部分地区也曾实行过夏令时。1986年4月，中央有关部门发出“在全国范围内实行夏时制的通知”，具体作法是：每年从四月中旬第一个星期日的凌晨2时整（北京时间），将时钟拨快一小时，即将表针由2时拨至3时，夏令时开始；到九月中旬第一个星期日的凌晨2时整（北京夏令时），再将时钟拨回一小时，即将表针由2时拨至1时，夏令时结束。从1986年到1991年的六个年度，除1986年因是实行夏时制的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。1992年起，夏令时暂停实行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看完这段描述应该就明白原因了，在中国东八时区时区，某些时间段是不存在的，例如”1988-04-10 00-00-00”至”1988-04-10 01-00-00”中间的时间段。&lt;/p&gt;

&lt;h3 id=&quot;-23解决方案&quot;&gt;&lt;a id=&quot;2_3&quot;&gt;&lt;/a&gt; 2.3、解决方案&lt;/h3&gt;

&lt;p&gt;既然是时区引起的问题，那就把时区转换为 UTC 或 GMT 的时区即可。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birthStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;1988-04-10 00-00-00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTimeZone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSTimeZone&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeZoneWithName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;GMT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 零时区&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDateFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;yyyy-MM-dd HH-mm-ss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dateFromString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birthStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;BirthStr convert to NSDate is %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt; &lt;strong&gt;不要用模拟器测试&lt;/strong&gt;，模拟器测试&lt;strong&gt;结果不正确&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;-三日期格式-yyyy-mm-dd-和-yyyy-mm-dd-区别&quot;&gt;&lt;a id=&quot;3_0&quot;&gt;&lt;/a&gt; 三、日期格式 YYYY-MM-dd 和 yyyy-MM-dd 区别&lt;/h2&gt;

&lt;h3 id=&quot;-31问题描述&quot;&gt;&lt;a id=&quot;3_1&quot;&gt;&lt;/a&gt; 3.1、问题描述&lt;/h3&gt;

&lt;p&gt;开发中遇到有人使用 YYYY-MM-dd 处理时间格式，觉得不对又说不出为什么，就调研了一下。&lt;/p&gt;

&lt;p&gt;大多数情况下，设置时间格式 YYYY-MM-dd 和 yyyy-MM-dd 转换的日期是一样的，只有当到达一些特点的时间节点，跨年时使用 “YYYY-MM-dd” 可能会出现差一年的问题。如下代码所示：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 原始的日期字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginDateStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;2015-12-28&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 转换为NSDate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDateFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orginDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dateFromString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginDateStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;orginFormatter: orginDate is %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orginDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 如果用YYYY将orginDate转换回字符串时就出现了问题&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDateFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDateFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;YYYY-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekDateStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekFormatter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stringFromDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orginDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;weekFormatter: weekDateStr is %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weekDateStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;打印结果，相差一年：&lt;/p&gt;

  &lt;p&gt;orginFormatter: orginDate is Mon Dec 28 00:00:00 2015&lt;/p&gt;

  &lt;p&gt;weekFormatter: weekDateStr is 2016-12-28&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;-32问题分析&quot;&gt;&lt;a id=&quot;3_2&quot;&gt;&lt;/a&gt; 3.2、问题分析&lt;/h3&gt;

&lt;p&gt;我们先来理解 YYYY 和 yyyy 的区别：&lt;/p&gt;

&lt;p&gt;“YYYY format” 是 “ISO week numbering system”&lt;/p&gt;

&lt;p&gt;“yyyy format” 是 “Gregorian Calendar（公历）”&lt;/p&gt;

&lt;p&gt;“YYYY specifies the week of the year (ISO) while yyyy specifies the calendar year (Gregorian)”&lt;/p&gt;

&lt;p&gt;yyyy specifies the calendar year whereas YYYY specifies the year (of “Week of Year”), used in the ISO year-week calendar.&lt;/p&gt;

&lt;p&gt;也就是说转换为日期时，DateFormatter如果是YYYY格式的话，如果1月1日是星期一，星期二，星期三或星期四，它是在01周。如果一月1日是星期五，星期六或星期日，它在前一年的52周或53周。&lt;/p&gt;

&lt;p&gt;苹果官方文档说使用YYYY是常见错误，正确的应该是使用yyyy格式，官方文档解释如下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It uses yyyy to specify the year component. A common mistake is to use YYYY. yyyy specifies the calendar year whereas YYYY specifies the year (of “Week of Year”), used in the ISO year-week calendar. In most cases, yyyy and YYYY yield the same number, however they may be different. Typically you should use the calendar year.&lt;/p&gt;

  &lt;p&gt;The representation of the time may be 13:00. In iOS, however, if the user has switched 24-Hour Time to Off, the time may be 1:00 pm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;-33解决方案&quot;&gt;&lt;a id=&quot;3_3&quot;&gt;&lt;/a&gt; 3.3、解决方案&lt;/h3&gt;

&lt;p&gt;使用正确的时间格式 &lt;strong&gt;yyyy-MM-dd&lt;/strong&gt; 来处理日期时间。&lt;/p&gt;

&lt;h2 id=&quot;-四ios-局部-bool-变量随机值&quot;&gt;&lt;a id=&quot;4_0&quot;&gt;&lt;/a&gt; 四、iOS 局部 BOOL 变量随机值&lt;/h2&gt;

&lt;h3 id=&quot;-41问题描述&quot;&gt;&lt;a id=&quot;4_1&quot;&gt;&lt;/a&gt; 4.1、问题描述&lt;/h3&gt;

&lt;p&gt;测试给一个小伙伴提了一个Bug，点击一个功能时会不定时出现问题，能够复现，但不是每次都出现。如下代码所示：&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isSuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;success&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;测试结果：在 Debug 环境下真机和模拟器都是 failed，但打包成出来安装后可能为 success 也可能是 failed 了。&lt;/p&gt;

&lt;h3 id=&quot;-42问题分析&quot;&gt;&lt;a id=&quot;4_2&quot;&gt;&lt;/a&gt; 4.2、问题分析&lt;/h3&gt;

&lt;p&gt;很明显是局部变量 isSuccess 出现了随机值导致的，虽然我个人平时的习惯是声明遍历一定会初始化，但 Debug 模式下正常，打包后就出现随机值的原因还是不清楚，于是调研了一下。&lt;/p&gt;

&lt;p&gt;在 ARC 环境下，本地对象创建如果未初始化，指针会指向默认值 nil；但是类似 BOOL 的非对象类型的局部变量，未初始化时会指向最后一次写入该地址的内容，可能为任意值，也就是垃圾值，出现随机值也就不稀奇了。&lt;/p&gt;

&lt;h3 id=&quot;-43解决方案&quot;&gt;&lt;a id=&quot;4_3&quot;&gt;&lt;/a&gt; 4.3、解决方案&lt;/h3&gt;

&lt;p&gt;创建变量时要养成初始化的好习惯，尤其是基本数据类型，例如:&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSuccess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-五iphone-用户名包含特殊符号引起的后台-crash&quot;&gt;&lt;a id=&quot;5_0&quot;&gt;&lt;/a&gt; 五、iPhone 用户名包含特殊符号引起的后台 Crash&lt;/h2&gt;

&lt;h3 id=&quot;-51问题描述&quot;&gt;&lt;a id=&quot;5_1&quot;&gt;&lt;/a&gt; 5.1、问题描述&lt;/h3&gt;

&lt;p&gt;遇到一个工单，客户反馈无法正常进入 App，进入后就报错，还反馈了机型、系统版本，App 版本等信息。&lt;/p&gt;

&lt;p&gt;排查代码逻辑没有问题，找到相同系统的机型，相同 App 版本测试没有问题。&lt;/p&gt;

&lt;p&gt;期间也回复了用户软件没有问题，但这个用户锲而不舍，最终给这个用户发了一个 Debug 版本，报错时 Debug 日志展示在界面上，复制粘贴发过来。最终问题定位在了&lt;strong&gt;用户名&lt;/strong&gt;上面，这位用户的用户名类似于这样的 &amp;amp;&amp;amp;###???###&amp;amp;&amp;amp;。&lt;/p&gt;

&lt;h3 id=&quot;-52问题分析&quot;&gt;&lt;a id=&quot;5_2&quot;&gt;&lt;/a&gt; 5.2、问题分析&lt;/h3&gt;

&lt;p&gt;这时候可能已经想明白怎么回事了，特殊符号转义引起的后台Bug。例如一些特殊的符号，例如 !#$&amp;amp;’()*+,/:;=?@[] 这些特殊符号，拼接在 URL 或者 Body 里面，传送到后台时都可能引起转义，不能正常解析，不同的后台表现逻辑不一致。&lt;/p&gt;

&lt;h3 id=&quot;-53解决方案&quot;&gt;&lt;a id=&quot;5_3&quot;&gt;&lt;/a&gt; 5.3、解决方案&lt;/h3&gt;

&lt;p&gt;既然是特殊字符引起的，在网络传输过程中，对特殊字符进 URLEncode 即可，服务器接收到进行 URLDecode 即可。&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 用户手机设置的用户名&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userPhoneName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;abc&amp;amp;&amp;amp;&amp;amp;???dd**%###!!!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 设置需要转义的特殊字符，例如@&quot;/+=\n&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;characterSetStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&quot;?!@#$^&amp;amp;%*+,:;='&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`&amp;lt;&amp;gt;()[]{}/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSCharacterSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;characterSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSCharacterSet&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;characterSetWithCharactersInString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;characterSetStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;invertedSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 返回转义后的字符串&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlEncodeStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userPhoneName&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stringByAddingPercentEncodingWithAllowedCharacters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;characterSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;UserPhoneName Encoding is %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlEncodeStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 移除百分号转义&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;removeEncodingStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlEncodeStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringByRemovingPercentEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;UserPhoneName removeEncoding is %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;removeEncodingStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;打印结果：&lt;/p&gt;

  &lt;p&gt;UserPhoneName Encoding is abc%26%26%26%3F%3F%3Fdd%2A%2A%25%23%23%23%21%21%21&lt;/p&gt;

  &lt;p&gt;UserPhoneName removeEncoding is abc&amp;amp;&amp;amp;&amp;amp;???dd**%###!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt; 经历这次事件，在处理特殊字符问题上留下了深刻的印象，无论是处理用户输入，还是取值用户字符串，都会注意特殊字符的转义问题了。&lt;/p&gt;

&lt;h2 id=&quot;-六参考链接&quot;&gt;&lt;a id=&quot;6_0&quot;&gt;&lt;/a&gt; 六、参考链接&lt;/h2&gt;

&lt;p&gt;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/DataFormatting/Articles/dfDateFormatting10_4.html&lt;/p&gt;

&lt;p&gt;http://blog.leichunfeng.com/blog/2017/02/20/talking-about-the-decompression-of-the-image-in-ios/#jtss-tsina&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Oct 2018 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2018/10/%E8%AE%B0%E4%B8%80%E4%BA%9B%E5%8D%B0%E8%B1%A1%E6%B7%B1%E5%88%BB%E7%9A%84-Bug/</link>
        <guid isPermaLink="true">https://cocoafei.top/2018/10/%E8%AE%B0%E4%B8%80%E4%BA%9B%E5%8D%B0%E8%B1%A1%E6%B7%B1%E5%88%BB%E7%9A%84-Bug/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>cocoapods 发布库</title>
        <description>&lt;h2 id=&quot;安装-cocoapods&quot;&gt;安装 cocoapods&lt;/h2&gt;

&lt;p&gt;首次安装 cocoapods 建议升级 Ruby，防止 Ruby 版本过低出现的一些错误。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 查看当前 Ruby 版本&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 联网升级为 Ruby 最新稳定版本，需要几分钟时间&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stable&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# 激活环境变量&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/.bashrc
source ~/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bash_profile&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 查看升级后的 Ruby 版本&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更换安装源，Ruby 官方库 https://rubygems.org/ 为国外源，速度慢且可能被墙，更换为国内源。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 查看当前 Ruby 源，预计显示 https://rubygems.org/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 删除源&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubygems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 添加源&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;china&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 查看更改后 Ruby 源&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装 cocoapods，Mac 新版系统，例如 Mojave，由于目录权限改变，必须安装到用户目录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;下，旧的安装方法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo gem install cocoapods&lt;/code&gt;在新系统上会报错。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 将 cocoapods 安装到 /usr/local/bin 目录下&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/usr/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cocoapods&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 安装成功后，查看 cocoapods &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用-cocoapods&quot;&gt;使用 cocoapods&lt;/h2&gt;

&lt;p&gt;创建 Podfile 文件，编辑填入需要集成的依赖库。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 创建 Podfile（切换到工程目录下,没有后缀）&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Podfile&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 搜索需要的框架，里面会有集成方法，例如 pod 'AFNetworking', '~&amp;gt; 3.2.1'&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AFNetworking&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Podfile 文件示例如下：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 使用 Swift 或将下方依赖编译动态库&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;use_frameworks!&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 设置 iOS 最低兼容版本&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'8.0'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 当前项目 Scheme&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MyScheme'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖 AFNetworking 最新版本，pod update会更新&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'AFNetworking'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 指定 MBProgressHUD 的 1.1.0 版本，pod update不更新&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MBProgressHUD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1.1.0'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖 SDWebImage 的 5.0 以上兼容版本，一般表示是以 5 开头版本，pod update会更新&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SDWebImage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 5.0'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖 FMDB 的 2.7.5 以上兼容版本，若有警告，隐藏警告&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'FMDB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 2.7.5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;inhibit_warnings: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖 YYText 的 1.0.7 以上兼容版本，不隐藏警告&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYText'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.0.7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;inhibit_warnings: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑完成 Podfile 完成后，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt;即可，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod update&lt;/code&gt;会升级已安装的库。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 安装依赖库&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 升级安装依赖库（update包含install）&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;创建-cocoapods-发布项目&quot;&gt;创建 cocoapods 发布项目&lt;/h2&gt;

&lt;p&gt;推荐使用 cocoapods 模板创建，快速标准。完整命令如下，有选项的命令会在后面解释。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 基于模板工程，创建一个名称叫 TestProj 的项目，会要求输入一些选项&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 基于模板工程，已经生成了 .podspec 文件，其他项目可用此命令创建&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# .podspec 文件及项目编辑完成后，本地验证，可标记使用静态库和忽略警告&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 本地验证，若项目依赖了静态库，必须加上--use-libraries&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libraries&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 本地验证，有警告导致验证不通过，可使用--allow-warnings使验证通过&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libraries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;warnings&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 创建 tag，注意 tag 必须和 podspec 文件中 s.version = '0.1.2' 一致&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.1.2'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 推送至 GitHub，若此命令报错，使用 sourcetree 或其他工具推送接口&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 远程验证，可标记使用静态库和忽略警告&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 远程验证，若项目依赖了静态库，必须加上--use-libraries&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libraries&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 远程验证，有警告导致验证不通过，可使用--allow-warnings使验证通过&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libraries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;warnings&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 验证无错误，发布项目至 cocoapods&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trunk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;podspec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libraries&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 如果想删除已发布库，可使用 delete&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trunk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;podname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;基于模板创建项目&quot;&gt;基于模板创建项目&lt;/h3&gt;

&lt;p&gt;命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod lib create TestProj&lt;/code&gt;会创建一个名称为 TestProj 的项目，一般名称和你待发布库的名称相同，此项目基于 cocoapods 项目模板，方便快捷发布库。执行此命令需要输入一些选项。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 准备应用到什么平台&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;want&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;macOS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iOS&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 准备使用什么语言&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;want&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Swift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjC&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 是否需要为你的库包含一个 Demo 项目&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Would&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;library?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Yes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Yes&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 你想选择哪一个测试框架&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Which&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameworks&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Specta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kiwi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 你想要做视图单元测试吗&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Would&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;based&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testing?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Yes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 你的类前缀是什么，自定义，输入空表示没有前缀&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prefix?&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TP&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建成功，自动打开项目，编辑项目最低兼容版本，证书等配置，编译项目通过。最主要的文件是 .podspec 的文件的编辑，列举必须常用的项。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库名称，必须和 TestProj.podspec 名称一致&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TestProj&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 待发布库的版本，首次随意，后面依次递增，注意和 tag 名称相同 git tag '0.1.2'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;version&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0.1.2&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库的简介&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;summary&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;这里写库 TestProj 的简单介绍。&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库的详细介绍，注意，这里文本长度大于 spec.summary，否则验证报错&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
TestProj 是一个简单的库，使用 TestProj 可快速实现什么功能。
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库的主页pod search TestProj会展示Homepage: https://github.com/muzipiao/GMObjC&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;homepage&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/muzipiao/TestProj&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 开源协议，指向.podspec 文件同级目录下的 LICENSE 文件，注意无后缀&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;license&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库的作者及邮箱&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;author&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lifei&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lifei_zdjl@126.com&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库兼容的最低版本&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;platform&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;8.0&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 如果依赖了静态库 framework 或 .a 文件，此项必须&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;static_framework&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 指向的 Github 地址及版本&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;source&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/muzipiao/TestProj.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 源码位置，注意 podspec 文件中路径必须为子路径，不能向上遍历父路径，例如 ../ 等写法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;source_files&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TestProj/Classes/**/*.{h,m}&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 头文件位置，注意 podspec 文件中路径必须为子路径，不能向上遍历父路径，例如 ../ 等写法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_header_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TestProj/Classes/**/*.h&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖的系统库，依赖单个用 .framework，多个用.frameworks，逗号隔开&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;framework&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Foundation&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 若依赖多个系统库，使用 .frameworks，库之间逗号隔开&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frameworks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Foundation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UIKit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'AVFoundation'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库是否依赖 ARC&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requires_arc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 库依赖的其他三方库&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AFNetworking&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 依赖本地 framework&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vendored_frameworks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Libs/MBProgressHUD.framework'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 配置头文件搜索路径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xcconfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'HEADER_SEARCH_PATHS'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$(PROJECT_DIR)/Libs/MBProgressHUD.framework/Headers'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;特别注意：podspec 文件中路径必须为子路径，不能向上遍历父路径。&lt;/p&gt;

&lt;h2 id=&quot;常见错误&quot;&gt;常见错误&lt;/h2&gt;

&lt;h3 id=&quot;use_frameworks&quot;&gt;use_frameworks!&lt;/h3&gt;

&lt;p&gt;使用 Swift 库的同学必须加上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use_frameworks!&lt;/code&gt;，这个标记是会将 Pod 管理的依赖全部编译为动态库，需注意项目最低兼容版本需要在 iOS8 以上。&lt;/p&gt;

&lt;h3 id=&quot;依赖静态库的错误&quot;&gt;依赖静态库的错误&lt;/h3&gt;

&lt;p&gt;如果库依赖静态库，必须在 .podspec 的文件中配置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spec.static_framework = true&lt;/code&gt;，否则会报如下错误&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WARN&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;summary: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meaningful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unknown: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encountered&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unknown&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Pods-App'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transitive&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;binaries: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/private/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbtf_x71135bgsk9844np9hr0000gn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CocoaPods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Lint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20190308&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;57050&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lhnm7v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Pods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Libs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MBProgressHUD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TestProj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;did&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;due&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`--no-clean`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;inspect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pod-search-总是失败&quot;&gt;pod search 总是失败&lt;/h3&gt;

&lt;p&gt;安装 CocoaPods 后，可以正常使用，但发现执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod search&lt;/code&gt;来搜索类库信息时，却总是出现类似错误&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[!] Unable to find a pod with name, author, summary, or descriptionmatching '······'&lt;/code&gt;，可尝试下面的方法。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;删除 CocoaPods 目录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Library/Caches/CocoaPods/Pods/Release&lt;/code&gt;的缓存；&lt;/li&gt;
  &lt;li&gt;删除&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Library/Caches/CocoaPods&lt;/code&gt;目录下的 search_index.json 文件；&lt;/li&gt;
  &lt;li&gt;执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod setup&lt;/code&gt;命令，会自动下载本地库，有时速度较慢。&lt;/li&gt;
  &lt;li&gt;执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod search AFNetworking&lt;/code&gt;，搜索任意库，会重新创建索引，速度较慢。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 09 Jul 2018 00:00:00 +0800</pubDate>
        <link>https://cocoafei.top/2018/07/cocoapods-%E5%8F%91%E5%B8%83%E5%BA%93/</link>
        <guid isPermaLink="true">https://cocoafei.top/2018/07/cocoapods-%E5%8F%91%E5%B8%83%E5%BA%93/</guid>
        
        <category>iOS</category>
        
        
      </item>
    
  </channel>
</rss>
